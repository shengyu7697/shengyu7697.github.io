<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ShengYu Talk</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shengyu7697.github.io/"/>
  <updated>2024-06-06T23:31:22.000Z</updated>
  <id>https://shengyu7697.github.io/</id>
  
  <author>
    <name>ShengYu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP 中的 Session 用途與實踐範例：完整指南</title>
    <link href="https://shengyu7697.github.io/php-session/"/>
    <id>https://shengyu7697.github.io/php-session/</id>
    <published>2024-08-17T12:00:00.000Z</published>
    <updated>2024-06-06T23:31:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹 PHP 中的 Session 用法與範例，在當今的網路應用程式中，會話管理是一個關鍵組成部分。PHP 中的 <code>$_SESSION</code> 是一個強大的工具，讓開發者可以在不同的網頁之間儲存和共享使用者資料。本指南將詳細介紹 PHP 中的會話用途及實踐範例，幫助您在項目中有效使用會話。</p><h2><span id="什麼是-php-中的-session">什麼是 PHP 中的 Session？</span></h2><p>會話（Session）是一個臨時的資料儲存機制，用於在使用者瀏覽不同的網頁時，保持使用者資料的持久性。在 PHP 中，<code>$_SESSION</code> 是一個超全域陣列，用於儲存會話資料。會話資料儲存在伺服器上，而使用者端則透過一個唯一的會話 ID 來識別。</p><h2><span id="會話的主要用途">會話的主要用途</span></h2><ol><li><strong>保持使用者登入狀態</strong>：當使用者登錄到一個網站時，會話可以保存使用者的登入狀態，這樣在使用者瀏覽不同頁面時不需要重新登錄。</li><li><strong>保存使用者首選項</strong>：會話可以保存使用者的設定和首選項，比如語言選擇、顏色主題等。</li><li><strong>暫存表單資料</strong>：在多步驟表單中，可以使用會話來保存每一步的資料，直到使用者完成所有步驟。</li><li><strong>購物車</strong>：在電子商務網站中，會話可以用來保存使用者的購物車內容，直到使用者結帳。</li></ol><h2><span id="如何使用-php-中的-session">如何使用 PHP 中的 Session</span></h2><h3><span id="1-開始會話">1. 開始會話</span></h3><p>在使用會話之前，需要先啟動會話。這通常是在每個頁面的開頭進行的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="2-設定會話變數">2. 設定會話變數</span></h3><p>可以將資料儲存到會話中，透過給 <code>$_SESSION</code> 陣列賦值：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[<span class="string">'username'</span>] = <span class="string">'JohnDoe'</span>;</span><br><span class="line">$_SESSION[<span class="string">'email'</span>] = <span class="string">'john.doe@example.com'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="3-讀取會話變數">3. 讀取會話變數</span></h3><p>在需要使用會話資料的地方，可以讀取 <code>$_SESSION</code> 陣列中的值：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Username: '</span> . $_SESSION[<span class="string">'username'</span>]; <span class="comment">// 輸出：Username: JohnDoe</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Email: '</span> . $_SESSION[<span class="string">'email'</span>]; <span class="comment">// 輸出：Email: john.doe@example.com</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="4-刪除會話變數">4. 刪除會話變數</span></h3><p>可以使用 <code>unset()</code> 函式來刪除會話中的某個變數：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">unset</span>($_SESSION[<span class="string">'email'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="5-銷毀會話">5. 銷毀會話</span></h3><p>如果需要刪除所有會話資料並結束會話，可以使用 <code>session_destroy()</code> 函式：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line">session_destroy();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="範例簡單的登入系統">範例：簡單的登入系統</span></h2><p>以下是一個簡單的登入系統範例，使用會話來保存和檢查使用者的登入狀態。</p><h3><span id="loginphp">login.php</span></h3><p>這個頁面包含一個基本的登入表單。當使用者送出表單時，會檢查使用者名和密碼是否對應，如果對應，則設定會話變數並重導向到歡迎頁面。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">'REQUEST_METHOD'</span>] == <span class="string">'POST'</span>) &#123;</span><br><span class="line">    $username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">    $password = $_POST[<span class="string">'password'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 假設使用簡單的硬編碼認證</span></span><br><span class="line">    <span class="keyword">if</span> ($username == <span class="string">'admin'</span> &amp;&amp; $password == <span class="string">'password'</span>) &#123;</span><br><span class="line">        $_SESSION[<span class="string">'loggedin'</span>] = <span class="keyword">true</span>;</span><br><span class="line">        $_SESSION[<span class="string">'username'</span>] = $username;</span><br><span class="line">        header(<span class="string">'Location: welcome.php'</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $error = <span class="string">'Invalid username or password'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form method=<span class="string">"POST"</span>&gt;</span><br><span class="line">        Username: &lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span> required&gt;&lt;br&gt;</span><br><span class="line">        Password: &lt;input type=<span class="string">"password"</span> name=<span class="string">"password"</span> required&gt;&lt;br&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Login"</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($error)) <span class="keyword">echo</span> $error; <span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3><span id="welcomephp">welcome.php</span></h3><p>這個頁面是使用者登入後的歡迎頁面。如果使用者沒有登入，會重導向回登入頁面。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'loggedin'</span>])) &#123;</span><br><span class="line">    header(<span class="string">'Location: login.php'</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Welcome, <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $_SESSION[<span class="string">'username'</span>]; <span class="meta">?&gt;</span>!&lt;/h1&gt;</span><br><span class="line">    &lt;a href=<span class="string">"logout.php"</span>&gt;Logout&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3><span id="logoutphp">logout.php</span></h3><p>這個頁面用於使用者登出，銷毀會話並重導向回登入頁面。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line">session_destroy();</span><br><span class="line">header(<span class="string">'Location: login.php'</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="結論">結論</span></h2><p>PHP 中的會話功能是一個強大且靈活的工具，能夠在不同頁面之間共享資料，實現使用者狀態保持、資料儲存和跨頁面資料共享。透過上面的範例，您可以看到如何在您的應用程式中實現會話管理。</p><p>以上就是 PHP Session 用途與實踐範例介紹，<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p><strong>其它相關文章推薦</strong><br>如果你想學習 PHP 相關技術，可以參考看看下面的文章，<br><a href="/php-pdo/" title="PHP 和 PDO 進行資料庫操作">PHP 和 PDO 進行資料庫操作</a><br><a href="/php-post/" title="PHP $_POST 變數用途、語法與實用範例詳解">PHP $_POST 變數用途、語法與實用範例詳解</a><br><a href="/php-isset/" title="深入理解 PHP 中的 isset 用法、範例及最佳實踐">深入理解 PHP 中的 isset 用法、範例及最佳實踐</a><br><a href="/php-substr/" title="PHP substr 函式全面解析與應用範例">PHP substr 函式全面解析與應用範例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹 PHP 中的 Session 用法與範例，在當今的網路應用程式中，會話管理是一個關鍵組成部分。PHP 中的 &lt;code&gt;$_SESSION&lt;/code&gt; 是一個強大的工具，讓開發者可以在不同的網頁之間儲存和共享使用者資料。本指南將詳細介紹 PHP
      
    
    </summary>
    
      <category term="PHP教學" scheme="https://shengyu7697.github.io/categories/PHP%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="PHP" scheme="https://shengyu7697.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP $_POST 變數用途、語法與實用範例詳解</title>
    <link href="https://shengyu7697.github.io/php-post/"/>
    <id>https://shengyu7697.github.io/php-post/</id>
    <published>2024-08-10T12:00:00.000Z</published>
    <updated>2024-06-06T23:31:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹 PHP <code>substr</code> 用法與範例，在現代的網頁開發中，表單資料的處理是非常常見的需求之一。PHP 提供了許多方便的方法來處理表單資料，其中 <code>_POST</code> 超全域變數尤為重要。這篇文章將詳細介紹 PHP 的 <code>_POST</code> 變數，包括其用途、語法和多個實用範例，幫助開發者更好地理解和應用這個功能。</p><h2><span id="什麼是-_post-變數">什麼是 <code>_POST</code> 變數？</span></h2><p><code>_POST</code> 是 PHP 中的超全域變數（superglobal），用來收集透過 HTTP POST 方法送出的表單資料。當使用者送出表單後，表單資料會被儲存在 <code>_POST</code> 變數中，並可以在伺服器端進行訪問和處理。這種方法通常用於需要保密或較大資料量的表單送出，例如使用者登錄、註冊和檔案上傳。</p><h2><span id="_post-的主要用途"><code>$_POST</code> 的主要用途</span></h2><ol><li><strong>表單資料接收</strong>：用於處理表單送出時傳遞的資料，例如使用者註冊、登錄表單等。</li><li><strong>檔案上傳</strong>：用於處理檔案上傳時傳遞的資料。</li><li><strong>安全性</strong>：相比 GET 方法，POST 方法不會將資料顯示在 URL 中，因此更適合傳遞敏感資訊（例如密碼）。</li></ol><h2><span id="_post-變數的使用方法"><code>_POST</code> 變數的使用方法</span></h2><p>要使用 <code>_POST</code> 變數，首先需要建立一個使用 POST 方法送出的 HTML 表單。然後，在 PHP 腳本中訪問 <code>_POST</code> 變數來處理送出的資料。</p><h2><span id="範例一簡單表單處理">範例一：簡單表單處理</span></h2><p>以下是一個簡單的例子，展示如何使用 <code>$_POST</code> 接收和處理來自表單的資料。<br>首先，我們建立一個簡單的 HTML 表單，讓使用者輸入名字和電子郵件地址。</p><p><strong>HTML 表單：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST 表單範例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"process_form.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span>&gt;</span>名字:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>電子郵件:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"送出"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>PHP 腳本 (process_form.php)：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123;</span><br><span class="line">    $name = $_POST[<span class="string">'name'</span>];</span><br><span class="line">    $email = $_POST[<span class="string">'email'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"名字: "</span> . htmlspecialchars($name) . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"電子郵件: "</span> . htmlspecialchars($email);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在這個範例中，使用者送出表單後，資料會被發送到 <code>process_form.php</code>。PHP 腳本檢查請求方法是否為 POST，然後透過 <code>_POST</code> 變數訪問表單資料，並使用 <code>htmlspecialchars</code> 函式進行輸出，防止 XSS 攻擊。</p><h2><span id="範例二帶有驗證的表單處理">範例二：帶有驗證的表單處理</span></h2><p>除了基本的表單處理，我們還可以新增一些資料驗證來確保送出的資料是有效的。</p><p><strong>HTML 表單：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>帶驗證的 POST 表單<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"process_form_with_validation.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span>&gt;</span>名字:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>電子郵件:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"送出"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>PHP 腳本 (process_form_with_validation.php)：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$name = $email = <span class="string">""</span>;</span><br><span class="line">$nameErr = $emailErr = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'name'</span>])) &#123;</span><br><span class="line">        $nameErr = <span class="string">"名字是必填項"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $name = test_input($_POST[<span class="string">'name'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'email'</span>])) &#123;</span><br><span class="line">        $emailErr = <span class="string">"電子郵件是必填項"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $email = test_input($_POST[<span class="string">'email'</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!filter_var($email, FILTER_VALIDATE_EMAIL)) &#123;</span><br><span class="line">            $emailErr = <span class="string">"無效的電子郵件格式"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_input</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">    $data = trim($data);</span><br><span class="line">    $data = stripslashes($data);</span><br><span class="line">    $data = htmlspecialchars($data);</span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;表單結果&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h2&gt;表單驗證結果&lt;/h2&gt;</span><br><span class="line">    &lt;p&gt;&lt;span class="error"&gt;* 必填字段&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">    &lt;form method=<span class="string">"post"</span> action=<span class="string">"&lt;?php echo htmlspecialchars($_SERVER["</span>PHP_SELF<span class="string">"]);?&gt;"</span>&gt;</span><br><span class="line">        &lt;label <span class="keyword">for</span>=<span class="string">"name"</span>&gt;名字:&lt;/label&gt;</span><br><span class="line">        &lt;input type=<span class="string">"text"</span> id=<span class="string">"name"</span> name=<span class="string">"name"</span> value=<span class="string">"&lt;?php echo $name;?&gt;"</span>&gt;</span><br><span class="line">        &lt;span class="error"&gt;* &lt;?php echo $nameErr;?&gt;&lt;/span&gt;</span><br><span class="line">        &lt;br&gt;&lt;br&gt;</span><br><span class="line">        &lt;label <span class="keyword">for</span>=<span class="string">"email"</span>&gt;電子郵件:&lt;/label&gt;</span><br><span class="line">        &lt;input type=<span class="string">"email"</span> id=<span class="string">"email"</span> name=<span class="string">"email"</span> value=<span class="string">"&lt;?php echo $email;?&gt;"</span>&gt;</span><br><span class="line">        &lt;span class="error"&gt;* &lt;?php echo $emailErr;?&gt;&lt;/span&gt;</span><br><span class="line">        &lt;br&gt;&lt;br&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"送出"</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span> &amp;&amp; $nameErr == <span class="string">""</span> &amp;&amp; $emailErr == <span class="string">""</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;h3&gt;表單資料已送出成功&lt;/h3&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"名字: "</span> . $name . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"電子郵件: "</span> . $email;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>在這個範例中，我們新增了基本的資料驗證。<code>test_input</code> 函式對輸入資料進行處理，防止注入攻擊和 XSS 攻擊。表單送出後，資料會被檢查，如果有錯誤，錯誤資訊會顯示在表單旁邊。只有當所有字段都正確填寫時，表單資料才會被顯示。</p><h2><span id="為什麼要使用-_post">為什麼要使用 <code>$_POST</code>？</span></h2><h3><span id="保護資料隱私">保護資料隱私</span></h3><p>相比 GET 方法，POST 方法不會將資料顯示在 URL 中，因此更適合傳遞敏感資訊。例如，當使用者送出包含密碼的表單時，使用 POST 方法可以避免密碼在 URL 中曝光。</p><h3><span id="傳輸大資料量">傳輸大資料量</span></h3><p>POST 方法沒有 GET 方法的 URL 長度限制，這意味著我們可以使用 POST 方法來傳輸更大的資料量，例如檔案上傳。</p><h2><span id="安全性考量">安全性考量</span></h2><p>使用 <code>$_POST</code> 處理表單資料時，我們需要注意以下幾點，以確保資料的安全：</p><ol><li><strong>資料驗證</strong>：對接收到的資料進行驗證，確保資料符合預期。例如，檢查電子郵件地址是否有效。</li><li><strong>資料消毒</strong>：使用 <code>htmlspecialchars</code> 或其他合適的函式來消毒資料，防止 XSS 攻擊。</li><li><strong>SQL 注入防護</strong>：如果將資料儲存到資料庫中，應使用預處理語句或其他方法防止 SQL 注入。</li></ol><h2><span id="結論">結論</span></h2><p><code>_POST</code> 變數是 PHP 中一個非常重要的工具，用於收集和處理來自 HTML 表單的資料。透過理解其基本用法和結合資料驗證技術，我們可以更安全有效地處理使用者輸入的資料。</p><p>希望這篇文章能幫助你更好地理解 PHP $_POST 變數的用途和實踐方式。<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p><strong>其它相關文章推薦</strong><br>如果你想學習 PHP 相關技術，可以參考看看下面的文章，<br><a href="/php-pdo/" title="PHP 和 PDO 進行資料庫操作">PHP 和 PDO 進行資料庫操作</a><br><a href="/php-session/" title="PHP 中的 Session 用途與實踐範例：完整指南">PHP 中的 Session 用途與實踐範例：完整指南</a><br><a href="/php-substr/" title="PHP substr 函式全面解析與應用範例">PHP substr 函式全面解析與應用範例</a><br><a href="/php-isset/" title="深入理解 PHP 中的 isset 用法、範例及最佳實踐">深入理解 PHP 中的 isset 用法、範例及最佳實踐</a><br><a href="/php-session_start/" title="了解 PHP 中的 session_start() 函式用途與範例">了解 PHP 中的 session_start() 函式用途與範例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹 PHP &lt;code&gt;substr&lt;/code&gt; 用法與範例，在現代的網頁開發中，表單資料的處理是非常常見的需求之一。PHP 提供了許多方便的方法來處理表單資料，其中 &lt;code&gt;_POST&lt;/code&gt; 超全域變數尤為重要。這篇文章將詳細介紹 P
      
    
    </summary>
    
      <category term="PHP教學" scheme="https://shengyu7697.github.io/categories/PHP%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="PHP" scheme="https://shengyu7697.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP substr 函式全面解析與應用範例</title>
    <link href="https://shengyu7697.github.io/php-substr/"/>
    <id>https://shengyu7697.github.io/php-substr/</id>
    <published>2024-08-03T12:00:00.000Z</published>
    <updated>2024-06-06T23:31:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹 PHP <code>substr</code> 用法與範例，在開發 PHP 應用程式的過程中，字串處理是一個非常常見的需求。無論是提取使用者輸入的一部分資料，還是展示文章的部分內容，這些操作都離不開字串處理函式。而在眾多的 PHP 字串處理函式中，<code>substr</code> 函式是一個非常實用的工具。本篇文章將深入解析 PHP <code>substr</code> 函式的用途及其應用範例，幫助開發者更好地理解和運用這個函式。</p><h2><span id="什麼是-php-substr-函式">什麼是 PHP substr 函式？</span></h2><p><code>substr</code> 函式的全稱是 “substring”，即從一個字串中提取子串。它能夠根據指定的起始位置和長度，從原始字串中截取出所需的部分，並回傳這個子串。這個函式的使用頻率非常高，尤其是在處理使用者輸入、產生摘要或顯示部分內容時，<code>substr</code> 都能發揮重要作用。</p><h2><span id="php-substr-函式的語法">PHP substr 函式的語法</span></h2><p>在開始探討具體的應用範例之前，我們先來看一下 <code>substr</code> 函式的語法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">substr(string $string, int $start, int $length = ?): string</span><br></pre></td></tr></table></figure><ul><li><strong>$string</strong>：要處理的原始字串。</li><li><strong>$start</strong>：開始截取的位置，從 0 開始。如果是負數，表示從字串末尾開始計算的位置。</li><li><strong>$length</strong>（可選）：截取的長度。如果未提供或為 null，則一直截取到字串末尾。如果是負數，表示到字串末尾之前的字元數。</li></ul><h2><span id="php-substr-函式的應用範例">PHP substr 函式的應用範例</span></h2><p>為了讓大家更好地理解 <code>substr</code> 函式的用法，我們將透過一些具體的例子來進行說明。</p><h3><span id="範例-1基本用法">範例 1：基本用法</span></h3><p>假設我們有一個字串 “Hello, World!”，我們希望從中截取出 “World” 這個子串。可以這樣寫：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$text = <span class="string">"Hello, World!"</span>;</span><br><span class="line">$substring = substr($text, <span class="number">7</span>, <span class="number">5</span>); <span class="comment">// 從位置 7 開始，截取 5 個字元</span></span><br><span class="line"><span class="keyword">echo</span> $substring; <span class="comment">// 輸出 "World"</span></span><br></pre></td></tr></table></figure><p>在這個例子中，我們從字串的第 7 個位置開始，截取 5 個字元，結果得到了 “World”。</p><h3><span id="範例-2從字串末尾開始計算">範例 2：從字串末尾開始計算</span></h3><p>如果我們希望從字串的末尾開始計算位置，同樣可以使用 <code>substr</code> 函式。以下是具體用法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$text = <span class="string">"Hello, World!"</span>;</span><br><span class="line">$substring = substr($text, <span class="number">-6</span>, <span class="number">5</span>); <span class="comment">// 從倒數第 6 個字元開始，截取 5 個字元</span></span><br><span class="line"><span class="keyword">echo</span> $substring; <span class="comment">// 輸出 "World"</span></span><br></pre></td></tr></table></figure><p>在這裡，我們從倒數第 6 個字元開始，截取 5 個字元，結果同樣是 “World”。</p><h3><span id="範例-3省略長度參數">範例 3：省略長度參數</span></h3><p>如果我們希望從某個位置開始，一直截取到字串末尾，可以省略長度參數：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$text = <span class="string">"Hello, World!"</span>;</span><br><span class="line">$substring = substr($text, <span class="number">7</span>); <span class="comment">// 從位置 7 開始，一直截取到字串末尾</span></span><br><span class="line"><span class="keyword">echo</span> $substring; <span class="comment">// 輸出 "World!"</span></span><br></pre></td></tr></table></figure><p>這樣寫可以確保從第 7 個位置開始，將剩餘的字串全部截取出來。</p><h3><span id="範例-4使用負數長度">範例 4：使用負數長度</span></h3><p><code>substr</code> 函式還支持負數長度，表示從開始位置到字串末尾之前的字元數：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$text = <span class="string">"Hello, World!"</span>;</span><br><span class="line">$substring = substr($text, <span class="number">0</span>, <span class="number">-7</span>); <span class="comment">// 從位置 0 開始，截取到倒數第 7 個字元之前</span></span><br><span class="line"><span class="keyword">echo</span> $substring; <span class="comment">// 輸出 "Hello"</span></span><br></pre></td></tr></table></figure><p>在這個例子中，我們從位置 0 開始，截取到倒數第 7 個字元之前，結果得到了 “Hello”。</p><h3><span id="範例-5長度超過字串長度">範例 5：長度超過字串長度</span></h3><p>當長度參數超過了字串本身的長度時，<code>substr</code> 函式會自動截取到字串末尾：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$text = <span class="string">"Hello"</span>;</span><br><span class="line">$substring = substr($text, <span class="number">2</span>, <span class="number">10</span>); <span class="comment">// 長度參數超過了字串長度</span></span><br><span class="line"><span class="keyword">echo</span> $substring; <span class="comment">// 輸出 "llo"（從位置 2 開始，一直截取到字串末尾）</span></span><br></pre></td></tr></table></figure><p>在這裡，我們從位置 2 開始截取，儘管指定的長度為 10，但實際只截取到字串末尾，結果為 “llo”。</p><h3><span id="範例-6開始位置超過字串長度">範例 6：開始位置超過字串長度</span></h3><p>如果開始位置超過了字串的長度，<code>substr</code> 會回傳一個空字串：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$text = <span class="string">"Hello"</span>;</span><br><span class="line">$substring = substr($text, <span class="number">10</span>); <span class="comment">// 開始位置超過字串長度</span></span><br><span class="line"><span class="keyword">echo</span> $substring; <span class="comment">// 輸出 ""（空字串）</span></span><br></pre></td></tr></table></figure><p>在這個例子中，開始位置超過了字串的長度，結果回傳了一個空字串。</p><h2><span id="注意事項">注意事項</span></h2><p>在使用 <code>substr</code> 函式時，有幾點需要特別注意：</p><ul><li><strong>負數開始位置</strong>：如果 <code>$start</code> 是負數，表示從字串末尾開始計算的位置。</li><li><strong>負數長度</strong>：如果 <code>$length</code> 是負數，表示到字串末尾之前的字元數。</li><li><strong>開始位置超過字串長度</strong>：如果 <code>$start</code> 超過了字串長度，將回傳一個空字串。</li><li><strong>長度超過字串長度</strong>：如果 <code>$length</code> 超過了剩餘的字元數，將截取到字串末尾。</li></ul><h2><span id="結語">結語</span></h2><p>PHP 的 <code>substr</code> 函式是處理字串時的一個強大工具，透過靈活運用它的各種參數，可以實現多種字串操作需求。無論是在截取使用者輸入的一部分資料，還是產生文章摘要，<code>substr</code> 函式都能夠提供高效的解決方案。</p><p>希望這篇文章能幫助你更好地理解 PHP <code>substr</code> 的用途和實踐方式。<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p><strong>其它相關文章推薦</strong><br>如果你想學習 PHP 相關技術，可以參考看看下面的文章，<br><a href="/php-str_pad/" title="PHP str_pad 函式用途、語法與實用範例解析">PHP str_pad 函式用途、語法與實用範例解析</a><br><a href="/php-pdo/" title="PHP 和 PDO 進行資料庫操作">PHP 和 PDO 進行資料庫操作</a><br><a href="/php-isset/" title="深入理解 PHP 中的 isset 用法、範例及最佳實踐">深入理解 PHP 中的 isset 用法、範例及最佳實踐</a><br><a href="/php-session_start/" title="了解 PHP 中的 session_start() 函式用途與範例">了解 PHP 中的 session_start() 函式用途與範例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹 PHP &lt;code&gt;substr&lt;/code&gt; 用法與範例，在開發 PHP 應用程式的過程中，字串處理是一個非常常見的需求。無論是提取使用者輸入的一部分資料，還是展示文章的部分內容，這些操作都離不開字串處理函式。而在眾多的 PHP 字串處理函式中
      
    
    </summary>
    
      <category term="PHP教學" scheme="https://shengyu7697.github.io/categories/PHP%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="PHP" scheme="https://shengyu7697.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP str_pad 函式用途、語法與實用範例解析</title>
    <link href="https://shengyu7697.github.io/php-str_pad/"/>
    <id>https://shengyu7697.github.io/php-str_pad/</id>
    <published>2024-07-27T12:00:00.000Z</published>
    <updated>2024-06-06T23:31:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹 PHP <code>str_pad</code> 用法與範例，在現代的網頁開發中，處理和格式化字串是常見且重要的操作之一。PHP 提供了許多強大的字串處理函式，其中 <code>str_pad</code> 函式尤為實用。這篇文章將詳細介紹 PHP 的 <code>str_pad</code> 函式，包括其用途、語法和多個實用範例，幫助開發者更好地理解和應用這個功能。</p><h2><span id="什麼是-str_pad-函式">什麼是 <code>str_pad</code> 函式？</span></h2><p><code>str_pad</code> 是 PHP 中用來對字串進行填充的函式。它可以在字串的左邊、右邊或兩邊填充指定的字元，使字串達到預定的長度。這在格式化輸出、對齊文字和產生報表時非常有用。例如，在需要產生統一寬度的資料表格時，我們可以利用 <code>str_pad</code> 函式來確保每個欄位都具有相同的寬度，從而使表格更加整齊和易於閱讀。</p><h2><span id="str_pad-函式的語法"><code>str_pad</code> 函式的語法</span></h2><p><code>str_pad</code> 函式的語法如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str_pad(string $input, int $pad_length, string $pad_string = <span class="string">" "</span>, int $pad_type = STR_PAD_RIGHT): string</span><br></pre></td></tr></table></figure><p>這裡我們來逐一解釋各個參數的含義：</p><ul><li><strong>$input</strong>: 要填充的原始字串。</li><li><strong>$pad_length</strong>: 填充後的總長度。如果指定的長度小於或等於原始字串的長度，則不會進行填充。</li><li><strong>$pad_string</strong>: 用來填充的字串。預設為一個空格字元。</li><li><strong>$pad_type</strong>: 填充類型，可以是以下三種之一：<ul><li><code>STR_PAD_RIGHT</code>（預設）：在字串的右邊填充。</li><li><code>STR_PAD_LEFT</code>：在字串的左邊填充。</li><li><code>STR_PAD_BOTH</code>：在字串的兩邊填充。</li></ul></li></ul><h2><span id="str_pad-函式的使用範例"><code>str_pad</code> 函式的使用範例</span></h2><p>以下是幾個常見的 <code>str_pad</code> 函式使用範例，展示了如何根據不同需求對字串進行填充。</p><h3><span id="範例一右邊填充">範例一：右邊填充</span></h3><p>在這個範例中，我們將字串的右邊填充指定的字元，使其達到預定的長度。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$input = <span class="string">"Hello"</span>;</span><br><span class="line">$padded = str_pad($input, <span class="number">10</span>, <span class="string">"-"</span>);</span><br><span class="line"><span class="keyword">echo</span> $padded; <span class="comment">// 輸出 "Hello-----"</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在這裡，原始字串 “Hello” 被填充了 5 個 “-“ 號，最終達到了 10 個字元的長度。</p><h3><span id="範例二左邊填充">範例二：左邊填充</span></h3><p>有時候我們需要在字串的左邊進行填充。下面的範例展示了如何實現這一點。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$input = <span class="string">"Hello"</span>;</span><br><span class="line">$padded = str_pad($input, <span class="number">10</span>, <span class="string">"-"</span>, STR_PAD_LEFT);</span><br><span class="line"><span class="keyword">echo</span> $padded; <span class="comment">// 輸出 "-----Hello"</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>這次，字串 “Hello” 的左邊被填充了 5 個 “-“ 號。</p><h3><span id="範例三兩邊填充">範例三：兩邊填充</span></h3><p>如果需要在字串的兩邊同時進行填充，可以使用 <code>STR_PAD_BOTH</code> 參數。這個範例展示了這種用法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$input = <span class="string">"Hello"</span>;</span><br><span class="line">$padded = str_pad($input, <span class="number">10</span>, <span class="string">"-"</span>, STR_PAD_BOTH);</span><br><span class="line"><span class="keyword">echo</span> $padded; <span class="comment">// 輸出 "--Hello---"（注意：左右填充字元數可能不完全相等）</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在這範例裡，字串 “Hello” 被填充在兩邊，但由於總長度為 10，左右兩邊的填充字元數可能不完全相等。</p><h3><span id="範例四使用多字元填充">範例四：使用多字元填充</span></h3><p><code>str_pad</code> 函式不僅可以使用單個字元來填充，還可以使用多個字元。下面的範例展示了如何使用多字元填充。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$input = <span class="string">"Hello"</span>;</span><br><span class="line">$padded = str_pad($input, <span class="number">10</span>, <span class="string">"123"</span>);</span><br><span class="line"><span class="keyword">echo</span> $padded; <span class="comment">// 輸出 "Hello12312"</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在這裡，填充字串 “123” 被重複使用，直到原始字串達到指定的長度 10。</p><h3><span id="範例五格式化數字">範例五：格式化數字</span></h3><p>在處理數字格式時，<code>str_pad</code> 也非常有用。例如，當我們需要統一顯示數字的位數時，可以使用 <code>str_pad</code> 進行左側填充。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$number = <span class="number">7</span>;</span><br><span class="line">$formattedNumber = str_pad($number, <span class="number">5</span>, <span class="string">"0"</span>, STR_PAD_LEFT);</span><br><span class="line"><span class="keyword">echo</span> $formattedNumber; <span class="comment">// 輸出 "00007"</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在這個範例中，數字 7 被填充了四個 “0”，使其總長度達到 5 位，便於對齊和顯示。</p><h2><span id="為什麼-str_pad-函式這麼重要">為什麼 <code>str_pad</code> 函式這麼重要？</span></h2><p><code>str_pad</code> 函式在許多情況下都非常實用，特別是在需要格式化和對齊文字時。例如：</p><ol><li><strong>產生報表</strong>：在產生報表時，我們常常需要對齊各個欄位的資料，使得報表更加美觀和易於閱讀。</li><li><strong>格式化輸出</strong>：在終端或控制台輸出中，格式化的輸出能夠使資料更加清晰明瞭。</li><li><strong>處理固定寬度檔案</strong>：在處理一些固定寬度的檔案（如某些舊式資料格式）時，我們需要確保每個欄位都具有固定的寬度。</li></ol><h2><span id="結論">結論</span></h2><p><code>str_pad</code> 函式是 PHP 中一個非常強大且靈活的工具，能夠幫助我們輕鬆地對字串進行填充和格式化。無論是在產生報表、格式化輸出還是處理固定寬度檔案時，<code>str_pad</code> 都能發揮重要作用。透過理解其語法和各種填充模式，我們可以根據不同的需求靈活應用這個函式，從而提高程式碼的可讀性和可維護性。</p><p>希望這篇文章能夠幫助你更好地理解和使用 <code>str_pad</code> 函式。以上就是我們對 PHP <code>str_pad</code> 函式的全面解析。<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p><strong>其它相關文章推薦</strong><br>如果你想學習 PHP 相關技術，可以參考看看下面的文章，<br><a href="/php-substr/" title="PHP substr 函式全面解析與應用範例">PHP substr 函式全面解析與應用範例</a><br><a href="/php-pdo/" title="PHP 和 PDO 進行資料庫操作">PHP 和 PDO 進行資料庫操作</a><br><a href="/php-display-errors/" title="PHP 執行發生錯誤在 Chrome/Firefox 上顯示 Error 500，要怎麼讓 PHP 顯示錯誤">PHP 執行發生錯誤在 Chrome/Firefox 上顯示 Error 500，要怎麼讓 PHP 顯示錯誤</a><br><a href="/php-isset/" title="深入理解 PHP 中的 isset 用法、範例及最佳實踐">深入理解 PHP 中的 isset 用法、範例及最佳實踐</a><br><a href="/php-session_start/" title="了解 PHP 中的 session_start() 函式用途與範例">了解 PHP 中的 session_start() 函式用途與範例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹 PHP &lt;code&gt;str_pad&lt;/code&gt; 用法與範例，在現代的網頁開發中，處理和格式化字串是常見且重要的操作之一。PHP 提供了許多強大的字串處理函式，其中 &lt;code&gt;str_pad&lt;/code&gt; 函式尤為實用。這篇文章將詳細介紹 PH
      
    
    </summary>
    
      <category term="PHP教學" scheme="https://shengyu7697.github.io/categories/PHP%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="PHP" scheme="https://shengyu7697.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>如何使用 PHP 的 uniqid 函式產生唯一ID並提高應用程式安全性</title>
    <link href="https://shengyu7697.github.io/php-uniqid/"/>
    <id>https://shengyu7697.github.io/php-uniqid/</id>
    <published>2024-07-20T12:00:00.000Z</published>
    <updated>2024-06-06T23:31:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹 PHP <code>uniqid</code> 用法與範例，在現代Web開發中，唯一ID產生是一項非常常見的需求，無論是用於使用者帳號、訂單號還是其他標識符。PHP 提供了一個非常方便的內置函式 <code>uniqid()</code>，能夠根據當前時間戳產生一個唯一ID。在這篇文章中，我們將詳細介紹 <code>uniqid()</code> 函式的使用方法，以及如何進一步提高ID的唯一性和安全性。</p><h2><span id="什麼是-uniqid-函式">什麼是 <code>uniqid()</code> 函式？</span></h2><p><code>uniqid()</code> 是 PHP 中的一個內置函式，用於產生基於當前時間微秒數的唯一ID。該函式的基本用法非常簡單：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$id = uniqid();</span><br><span class="line"><span class="keyword">echo</span> $id;</span><br></pre></td></tr></table></figure><p>這段程式碼將產生一個類似於 <code>5f2c912cd6d88</code> 的字串，其中包含13個字元。產生的ID基於當前的時間戳，精確到微秒。這意味著，在通常情況下，每次呼叫 <code>uniqid()</code> 都會產生一個不同的ID。</p><h2><span id="uniqid-的可選參數"><code>uniqid()</code> 的可選參數</span></h2><p><code>uniqid()</code> 函式有兩個可選參數：</p><ol><li><code>$prefix</code>：一個可選的字串參數，新增到產生的唯一ID之前。</li><li><code>$more_entropy</code>：一個布爾值（預設為 <code>false</code>）。如果設定為 <code>true</code>，將附加更多的熵（隨機性）以進一步提高唯一性。</li></ol><p>讓我們看看這些參數如何影響 <code>uniqid()</code> 函式的輸出。</p><h2><span id="uniqid-帶前綴的使用方法"><code>uniqid()</code> 帶前綴的使用方法</span></h2><p>有時候，我們可能希望產生的唯一ID包含某些前綴，以便於區分不同類型的ID。例如，可以為使用者ID新增前綴“user_”：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$prefix = <span class="string">'user_'</span>;</span><br><span class="line">$id = uniqid($prefix);</span><br><span class="line"><span class="keyword">echo</span> $id;</span><br></pre></td></tr></table></figure><p>這將產生一個類似於 <code>user_5f2c912cd6d88</code> 的字串。這樣的ID不僅唯一，還能透過前綴快速識別其用途。</p><h2><span id="uniqid-增加熵的使用方法"><code>uniqid()</code> 增加熵的使用方法</span></h2><p>在高併發環境下，僅僅依賴時間戳可能不足以保證唯一性。此時，我們可以透過設定 <code>$more_entropy</code> 參數來增加ID的熵（隨機性）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$id = uniqid(<span class="string">''</span>, <span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">echo</span> $id;</span><br></pre></td></tr></table></figure><p>這將產生一個更長、更複雜的唯一ID，例如 <code>5f2c912cd6d88.66138147</code>。這樣的ID在高併發環境下的唯一性更高。</p><h2><span id="uniqid-綜合使用方法"><code>uniqid()</code> 綜合使用方法</span></h2><p>當我們既需要前綴又需要增加熵時，可以同時使用兩個參數：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$prefix = <span class="string">'order_'</span>;</span><br><span class="line">$id = uniqid($prefix, <span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">echo</span> $id;</span><br></pre></td></tr></table></figure><p>這將產生一個帶前綴和更多熵的唯一ID，例如 <code>order_5f2c912cd6d88.66138147</code>。</p><h2><span id="uniqid-提高唯一性和安全性"><code>uniqid()</code> 提高唯一性和安全性</span></h2><p>雖然 <code>uniqid()</code> 能產生基於時間戳的唯一ID，但在某些高並發環境下，產生的ID仍有可能重複。如果需要更高的唯一性和安全性，我們可以結合其他方法，如使用 <code>md5()</code> 或 <code>sha1()</code>，甚至 PHP 的隨機位元組產生函式 <code>random_bytes()</code>。</p><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$id = md5(uniqid(rand(), <span class="keyword">true</span>));</span><br><span class="line"><span class="keyword">echo</span> $id;</span><br></pre></td></tr></table></figure><p>這將產生一個32字元長的唯一ID，例如 <code>e7d1bc78bafb0dbd8c43f8d3fba95025</code>。這種方法透過混合隨機數和時間戳，並使用 <code>md5()</code> 哈希函式，極大地提高了ID的唯一性和不可預測性。</p><h2><span id="使用-random_bytes-產生高安全性id">使用 <code>random_bytes()</code> 產生高安全性ID</span></h2><p>如果應用場景需要極高的安全性（例如加密密鑰或重要資料標識符），可以使用 PHP 的 <code>random_bytes()</code> 函式來產生高安全性的隨機位元組，然後將其轉換為十六進位字串：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$id = bin2hex(random_bytes(<span class="number">16</span>));</span><br><span class="line"><span class="keyword">echo</span> $id;</span><br></pre></td></tr></table></figure><p>這將產生一個32字元長的隨機ID，例如 <code>4e5d6c9a2b3f4d7e8f9a1b2c3d4e5f6a</code>。 <code>random_bytes()</code> 函式使用作業系統的隨機數產生器，保證了隨機性的質量。</p><h2><span id="結論">結論</span></h2><p>PHP 的 <code>uniqid()</code> 函式是一個方便且易於使用的工具，適用於多種需要唯一標識符的場景。透過適當使用其可選參數，我們可以在大多數應用中產生足夠唯一的ID。然而，在高並發或安全需求更高的情況下，建議結合其他隨機數產生方法以進一步提高ID的唯一性和安全性。透過這些方法，我們可以確保應用程式的穩定性和安全性，滿足各種業務需求。</p><p>希望這篇文章能幫助你更好地理解 PHP <code>uniqid</code> 的用途和實踐方式。<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p><strong>其它相關文章推薦</strong><br>如果你想學習 PHP 相關技術，可以參考看看下面的文章，<br><a href="/php-substr/" title="PHP substr 函式全面解析與應用範例">PHP substr 函式全面解析與應用範例</a><br><a href="/php-str_pad/" title="PHP str_pad 函式用途、語法與實用範例解析">PHP str_pad 函式用途、語法與實用範例解析</a><br><a href="/php-pdo/" title="PHP 和 PDO 進行資料庫操作">PHP 和 PDO 進行資料庫操作</a><br><a href="/php-isset/" title="深入理解 PHP 中的 isset 用法、範例及最佳實踐">深入理解 PHP 中的 isset 用法、範例及最佳實踐</a><br><a href="/php-session_start/" title="了解 PHP 中的 session_start() 函式用途與範例">了解 PHP 中的 session_start() 函式用途與範例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹 PHP &lt;code&gt;uniqid&lt;/code&gt; 用法與範例，在現代Web開發中，唯一ID產生是一項非常常見的需求，無論是用於使用者帳號、訂單號還是其他標識符。PHP 提供了一個非常方便的內置函式 &lt;code&gt;uniqid()&lt;/code&gt;，能夠根
      
    
    </summary>
    
      <category term="PHP教學" scheme="https://shengyu7697.github.io/categories/PHP%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="PHP" scheme="https://shengyu7697.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 下安裝 wordpress</title>
    <link href="https://shengyu7697.github.io/ubuntu-wordpress/"/>
    <id>https://shengyu7697.github.io/ubuntu-wordpress/</id>
    <published>2024-07-14T12:00:00.000Z</published>
    <updated>2024-07-14T23:30:06.695Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 紀錄在 Ubuntu 下安裝 wordpress，我自己是用 Ubuntu 22.04 安裝 wordpress 6.5.5。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line">sudo apt install php libapache2-mod-php php-mysql \</span><br><span class="line">php-curl php-gd php-xml php-mbstring php-xmlrpc \</span><br><span class="line">php-zip php-soap php-intl -y</span><br><span class="line"></span><br><span class="line"># ubuntu 官網</span><br><span class="line">sudo apt install apache2 \</span><br><span class="line">                 ghostscript \</span><br><span class="line">                 libapache2-mod-php \</span><br><span class="line">                 mysql-server \</span><br><span class="line">                 php \</span><br><span class="line">                 php-bcmath \</span><br><span class="line">                 php-curl \</span><br><span class="line">                 php-imagick \</span><br><span class="line">                 php-intl \</span><br><span class="line">                 php-json \</span><br><span class="line">                 php-mbstring \</span><br><span class="line">                 php-mysql \</span><br><span class="line">                 php-xml \</span><br><span class="line">                 php-zip</span><br></pre></td></tr></table></figure><p>下載wordpress-6.5.5版<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://tw.wordpress.org/wordpress-6.5.5-zh_TW.zip</span><br><span class="line">sudo unzip wordpress-6.5.5-zh_TW.zip -d /var/www/html</span><br><span class="line">sudo chown -R www-data:www-data /var/www/html/wordpress/</span><br></pre></td></tr></table></figure></p><p>或者下載最新版<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://tw.wordpress.org/latest-zh_TW.zip</span><br><span class="line">sudo unzip latest-zh_TW.zip -d /var/www/html</span><br><span class="line">sudo chown -R www-data:www-data /var/www/html/wordpress/</span><br></pre></td></tr></table></figure></p><p>新建資料庫<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql</span><br><span class="line">CREATE DATABASE wordpress;</span><br><span class="line">CREATE USER &apos;wordpressuser&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;your-password&apos;;</span><br><span class="line">GRANT ALL PRIVILEGES ON wordpress.* TO &apos;wordpressuser&apos;@&apos;localhost&apos;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line">EXIT;</span><br></pre></td></tr></table></figure></p><p>編輯 wordpress.conf<br>sudo vim /etc/apache2/sites-available/wordpress.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory /var/www/html/wordpress/&gt;</span><br><span class="line">   AllowOverride All</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p><p>重啟 apache<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo a2ensite wordpress.conf</span><br><span class="line">sudo a2enmod rewrite</span><br><span class="line">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure></p><p>開啟網頁，填上剛剛稍早設定的資料，按下安裝，搞定！<br>資料庫名稱 wordpress<br>使用者名稱 wordpressuser<br>密碼 your-password</p><p>以上就是 Ubuntu 下安裝 wordpress 筆記，<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p>其他參考<br><a href="https://www.taki.com.tw/blog/how-to-install-wordpress-on-ubuntu/" rel="noopener" target="_blank">安裝 WordPress – 如何在 Ubuntu 上安裝 WordPress</a><br><a href="https://ubuntu.com/tutorials/install-and-configure-wordpress" rel="noopener" target="_blank">ubuntu官網Install and configure WordPress</a></p><p><strong>其它相關文章推薦</strong><br><a href="/mac-ubuntu-prevent-accidental-deletion-with-rm-command/" title="macOS 下使用 rm 指令如何避免誤刪除">macOS 下使用 rm 指令如何避免誤刪除</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 紀錄在 Ubuntu 下安裝 wordpress，我自己是用 Ubuntu 22.04 安裝 wordpress 6.5.5。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
      
    
    </summary>
    
    
      <category term="Ubuntu" scheme="https://shengyu7697.github.io/tags/Ubuntu/"/>
    
      <category term="Linux Command" scheme="https://shengyu7697.github.io/tags/Linux-Command/"/>
    
      <category term="Linux" scheme="https://shengyu7697.github.io/tags/Linux/"/>
    
      <category term="Shell Script" scheme="https://shengyu7697.github.io/tags/Shell-Script/"/>
    
  </entry>
  
  <entry>
    <title>深入理解 PHP 中的 isset 用法、範例及最佳實踐</title>
    <link href="https://shengyu7697.github.io/php-isset/"/>
    <id>https://shengyu7697.github.io/php-isset/</id>
    <published>2024-07-13T12:00:00.000Z</published>
    <updated>2024-06-06T23:31:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹 PHP <code>isset</code> 用法與範例，在PHP編程中，<code>isset</code> 是 PHP 內建的函式，它用於檢查變數是否已設定且其值不為 <code>null</code>。了解和正確使用 <code>isset</code> 對於避免未定義變數錯誤和提高程式碼穩定性至關重要。本文將詳細介紹 <code>isset</code> 的用途、語法，並透過多個範例展示其在不同場景中的應用。</p><h2><span id="isset-的用途"><code>isset</code> 的用途</span></h2><p><code>isset</code> 函式主要用於以下幾個方面：</p><ol><li><strong>檢查表單送出中的變數是否存在</strong>：這有助於避免在處理使用者送出的表單資料時遇到未定義變數的錯誤。</li><li><strong>檢查陣列中的key是否存在</strong>：在處理陣列資料時，這樣做可以確保某個key確實存在並且有值。</li><li><strong>檢查物件屬性是否已設定</strong>：這在面向物件編程中尤為重要，用來確保某個屬性已經被初始化。</li></ol><h2><span id="isset-的語法"><code>isset</code> 的語法</span></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool <span class="keyword">isset</span>(mixed $var, mixed ...$vars)</span><br></pre></td></tr></table></figure><ul><li><code>$var</code>：要檢查的變數。</li><li><code>$vars</code>：可選的額外變數，可以一次檢查多個變數。</li></ul><h2><span id="isset-的基本用法"><code>isset</code> 的基本用法</span></h2><p>下面是一個基本的 <code>isset</code> 使用範例，展示了如何檢查單個變數是否被設定：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$var1 = <span class="string">"Hello, World!"</span>;</span><br><span class="line">$var2 = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($var1)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'$var1 is set and not null'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'$var1 is not set or is null'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 輸出：$var1 is set and not null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($var2)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'$var2 is set and not null'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'$var2 is not set or is null'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 輸出：$var2 is not set or is null</span></span><br></pre></td></tr></table></figure><p>在這個範例中，<code>$var1</code> 被設定為一個字串，因此 <code>isset($var1)</code> 回傳 <code>true</code>，而 <code>$var2</code> 被設定為 <code>null</code>，因此 <code>isset($var2)</code> 回傳 <code>false</code>。</p><h2><span id="檢查陣列key">檢查陣列key</span></h2><p>使用 <code>isset</code> 可以方便地檢查陣列中的某個key是否存在：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$array = <span class="keyword">array</span>(<span class="string">'key1'</span> =&gt; <span class="string">'value1'</span>, <span class="string">'key2'</span> =&gt; <span class="string">'value2'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($array[<span class="string">'key1'</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'$array["key1"] is set and not null'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'$array["key1"] is not set or is null'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 輸出：$array["key1"] is set and not null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($array[<span class="string">'key3'</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'$array["key3"] is set and not null'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'$array["key3"] is not set or is null'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 輸出：$array["key3"] is not set or is null</span></span><br></pre></td></tr></table></figure><p>這裡展示了如何檢查陣列中某個key是否存在。<code>$array[&#39;key1&#39;]</code> 存在且有值，因此 <code>isset($array[&#39;key1&#39;])</code> 回傳 <code>true</code>。而 <code>$array[&#39;key3&#39;]</code> 不存在，因此 <code>isset($array[&#39;key3&#39;])</code> 回傳 <code>false</code>。</p><h2><span id="一次檢查多個變數">一次檢查多個變數</span></h2><p><code>isset</code> 可以一次檢查多個變數，只要其中任何一個變數未設定或為 <code>null</code>，就會回傳 <code>false</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$var1 = <span class="string">"Hello"</span>;</span><br><span class="line">$var2 = <span class="string">"World"</span>;</span><br><span class="line">$var3 = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($var1, $var2, $var3)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'All variables are set and not null'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'One or more variables are not set or are null'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 輸出：One or more variables are not set or are null</span></span><br></pre></td></tr></table></figure><p>在這個範例中，雖然 <code>$var1</code> 和 <code>$var2</code> 都被設定且不為 <code>null</code>，但 <code>$var3</code> 為 <code>null</code>，因此 <code>isset($var1, $var2, $var3)</code> 回傳 <code>false</code>。</p><h2><span id="檢查表單送出">檢查表單送出</span></h2><p>在處理使用者送出的表單時，<code>isset</code> 可以用來檢查表單字段是否被設定，從而避免處理未定義變數的錯誤。假設我們有一個簡單的HTML表單：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"process.php"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Login"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 <code>process.php</code> 中，我們可以使用 <code>isset</code> 來檢查表單字段是否被設定：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    $username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">    $password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">    <span class="comment">// 處理登錄邏輯</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Username: "</span> . $username . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Password: "</span> . $password;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Please fill in both username and password."</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>透過這種方式，我們可以確保使用者送出的 <code>username</code> 和 <code>password</code> 字段已經被設定並且不為 <code>null</code>，從而避免處理未定義變數的錯誤。</p><h2><span id="總結">總結</span></h2><p><code>isset</code> 是 PHP 中非常實用的函式，透過檢查變數是否被設定且不為 <code>null</code>，它幫助開發者避免了許多常見的錯誤。無論是在處理表單送出、檢查陣列key還是檢查物件屬性，<code>isset</code> 都能發揮重要作用。透過正確理解和使用 <code>isset</code>，我們可以編寫出更加健壯和可靠的PHP程式碼。</p><p>希望這篇文章能幫助你更好地理解 PHP <code>isset</code> 的用途和最佳實踐。<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p><strong>其它相關文章推薦</strong><br>如果你想學習 PHP 相關技術，可以參考看看下面的文章，<br><a href="/php-post/" title="PHP $_POST 變數用途、語法與實用範例詳解">PHP $_POST 變數用途、語法與實用範例詳解</a><br><a href="/php-session/" title="PHP 中的 Session 用途與實踐範例：完整指南">PHP 中的 Session 用途與實踐範例：完整指南</a><br><a href="/php-pdo/" title="PHP 和 PDO 進行資料庫操作">PHP 和 PDO 進行資料庫操作</a><br><a href="/php-display-errors/" title="PHP 執行發生錯誤在 Chrome/Firefox 上顯示 Error 500，要怎麼讓 PHP 顯示錯誤">PHP 執行發生錯誤在 Chrome/Firefox 上顯示 Error 500，要怎麼讓 PHP 顯示錯誤</a><br><a href="/php-session_start/" title="了解 PHP 中的 session_start() 函式用途與範例">了解 PHP 中的 session_start() 函式用途與範例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹 PHP &lt;code&gt;isset&lt;/code&gt; 用法與範例，在PHP編程中，&lt;code&gt;isset&lt;/code&gt; 是 PHP 內建的函式，它用於檢查變數是否已設定且其值不為 &lt;code&gt;null&lt;/code&gt;。了解和正確使用 &lt;code&gt;isset
      
    
    </summary>
    
      <category term="PHP教學" scheme="https://shengyu7697.github.io/categories/PHP%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="PHP" scheme="https://shengyu7697.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>如何使用 C/C++ 中的 printf 函式：詳盡指南</title>
    <link href="https://shengyu7697.github.io/cpp-printf/"/>
    <id>https://shengyu7697.github.io/cpp-printf/</id>
    <published>2024-07-12T12:00:00.000Z</published>
    <updated>2024-06-17T23:50:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹 C/C++ printf 用法與範例，在C/C++編程中，經常需要將資料印出。而<code>printf</code>函式正是這樣一個常用且強大的工具，它用於格式化輸出到標準輸出（如螢幕）。本文將深入探討<code>printf</code>函式的基本用法和一些高級技巧，幫助您更好地掌握這個函式，printf 詳細用法範例請繼續往下閱讀。  </p><p>C 語言要將資料格式化輸出到標準輸出(stdout)可以使用 printf，要使用 printf 的話需要引入的標頭檔 <code>&lt;stdio.h&gt;</code>，如果要使用 C++ 的標頭檔則是引入 <code>&lt;cstdio&gt;</code>，<br>printf 函式原型為<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">printf</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> * format, ...)</span></span>;</span><br></pre></td></tr></table></figure></p><p><code>const char *format</code>：格式化字串，定義了輸出的格式。該字串包含普通字元和格式說明符。普通字元直接輸出，格式說明符用來格式化並插入後續變數。</p><p><code>...</code>：可變參數清單，包含要格式化的資料。這些資料將根據格式化字串中的格式說明符依次插入。</p><p><code>printf</code> 函式的回傳值是輸出字元的總數。如果發生輸出錯誤，則回傳一個負數。</p><h2><span id="cc-printf-基本用法">C/C++ printf 基本用法</span></h2><p>使用 <code>printf</code> 的基本用法如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"格式化字串"</span>, 變數<span class="number">1</span>, 變數<span class="number">2</span>, ...);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="格式化字串中的格式說明符">格式化字串中的格式說明符</span></h2><p>格式化字串包含文字和格式說明符，格式說明符用於指示如何格式化變數。以下是常見的格式說明符：</p><ul><li><code>%d</code>：整數（十進位）</li><li><code>%f</code>：浮點數</li><li><code>%c</code>：單個字元</li><li><code>%s</code>：字串</li><li><code>%x</code>：整數（十六進位）</li></ul><h2><span id="範例">範例</span></h2><p>以下是一些 <code>printf</code> 函式的範例程式碼：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">42</span>;</span><br><span class="line">    <span class="keyword">float</span> f = <span class="number">3.14159</span>;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">'A'</span>;</span><br><span class="line">    <span class="keyword">char</span> str[] = <span class="string">"Hello, World!"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"整數：%d\n"</span>, i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"浮點數：%f\n"</span>, f);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"字元：%c\n"</span>, c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"字串：%s\n"</span>, str);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>執行以上程式碼，輸出結果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">整數：42</span><br><span class="line">浮點數：3.141590</span><br><span class="line">字元：A</span><br><span class="line">字串：Hello, World!</span><br></pre></td></tr></table></figure><h2><span id="高級用法">高級用法</span></h2><h3><span id="指定寬度和精度">指定寬度和精度</span></h3><p>您可以使用格式說明符來指定輸出的寬度和精度，例如：</p><ul><li><code>%5d</code>：最小寬度為 5 的整數</li><li><code>%.2f</code>：小數點後保留 2 位的浮點數</li><li><code>%5.2f</code>：最小寬度為 5 且小數點後保留 2 位的浮點數</li></ul><p>以下是相應的範例程式碼：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">42</span>;</span><br><span class="line">    <span class="keyword">float</span> f = <span class="number">3.14159</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"寬度為 5 的整數：%5d\n"</span>, i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"小數點後保留 2 位的浮點數：%.2f\n"</span>, f);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"寬度為 5 且小數點後保留 2 位的浮點數：%5.2f\n"</span>, f);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>執行以上程式碼，輸出結果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">寬度為 5 的整數：   42</span><br><span class="line">小數點後保留 2 位的浮點數：3.14</span><br><span class="line">寬度為 5 且小數點後保留 2 位的浮點數： 3.14</span><br></pre></td></tr></table></figure><h2><span id="小結">小結</span></h2><p><code>printf</code> 是 C 和 C++ 中格式化輸出的基本工具。透過使用格式說明符和各種選項，您可以輕鬆地控制輸出的格式，滿足不同的需求。掌握這些技巧，將讓您的編程工作更加得心應手。</p><p>以上就是 C/C++ printf 的用法與範例介紹，<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p><strong>其它相關文章推薦</strong><br>如果你想學習 C++ 相關技術，可以參考看看下面的文章，<br><a href="/cpp-tutorial/" title="C/C++ 新手入門教學懶人包">C/C++ 新手入門教學懶人包</a><br><a href="/cpp-printf-format/" title="C/C++ printf 參數說明">C/C++ printf 參數說明</a><br><a href="/cpp-scanf/" title="C/C++ scanf 用法與範例">C/C++ scanf 用法與範例</a><br><a href="/cpp-sscanf/" title="C/C++ sscanf 用法與範例">C/C++ sscanf 用法與範例</a><br><a href="/cpp-snprintf/" title="C/C++ snprintf 用法與範例">C/C++ snprintf 用法與範例</a><br><a href="/cpp-sprintf/" title="C/C++ sprintf 用法與範例">C/C++ sprintf 用法與範例</a><br><a href="/cpp-printf-size_t/" title="C/C++ printf 列印 size_t 的方法">C/C++ printf 列印 size_t 的方法</a><br><a href="/cpp-printf-int64_t-uint64_t/" title="32/64bit 作業系統 printf 列印 int64_t / uint64_t 的方法">32/64bit 作業系統 printf 列印 int64_t / uint64_t 的方法</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹 C/C++ printf 用法與範例，在C/C++編程中，經常需要將資料印出。而&lt;code&gt;printf&lt;/code&gt;函式正是這樣一個常用且強大的工具，它用於格式化輸出到標準輸出（如螢幕）。本文將深入探討&lt;code&gt;printf&lt;/code&gt;函式
      
    
    </summary>
    
      <category term="C/C++教學" scheme="https://shengyu7697.github.io/categories/C-C-%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="C/C++" scheme="https://shengyu7697.github.io/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>macOS 下 RDP client 遠端桌面軟體</title>
    <link href="https://shengyu7697.github.io/mac-rdp-client/"/>
    <id>https://shengyu7697.github.io/mac-rdp-client/</id>
    <published>2024-07-12T12:00:00.000Z</published>
    <updated>2024-07-14T09:30:06.861Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 紀錄 macOS 下 RDP client 軟體，RDP 就是我們常聽到 Windows 的遠端桌面使用的協議，這次我是要在macOS 下 RDP client 來連接到遠端的 Ubuntu 24.04 電腦，而 Ubuntu 24.04 內建的就是支援 RDP，不要問我為什麼是 RDP 而不是 VNC 我不知道，想知道怎麼使用的繼續看下去，理論上這個軟體也可以連接到遠端的 Windows 上。</p><p>一般來說，到 Mac App Store 的  <a href="https://apps.apple.com/us/app/microsoft-remote-desktop/id1295203466" rel="noopener" target="_blank">Microsoft Remote Desktop 或者叫 Microsoft 遠端桌面</a> 下載安裝即可使用。</p><p>但假如你的 macOS 跟我一樣已經升不上去停留在 macOS 11.x 的話，那麼你是無法從 App store 下載的</p><p>到<a href="https://learn.microsoft.com/zh-tw/windows-server/remote/remote-desktop-services/clients/mac-whatsnew" rel="noopener" target="_blank">適用於 macOS 的遠端桌面用戶端的新功能</a>裡點選<a href="https://install.appcenter.ms/orgs/rdmacios-k2vy/apps/microsoft-remote-desktop-for-mac/distribution_groups/all-users-of-microsoft-remote-desktop-for-mac" rel="noopener" target="_blank">Microsoft AppCenter</a><br>從這邊下載歷史舊版本</p><p>Version 10.8.4 (2111) 可用<br>Jun 15, 2023 at 02:59<br>60.05 MB</p><p>Version 10.9.3 (2158) 可用<br>Sep 22, 2023 at 05:35<br>55.47 MB</p><p>Version 10.9.6 (2185) 可用<br>Feb 14, 2024 at 07:31<br>55.64 MB</p><p>基本上 10.9.6 (2185) 以下的版本都可以使用，超過以上的版本會需要更高的 macOS 版本。</p><p>可能遇到的問題：可以開啟但連線後無法開啟新畫面，<br>其中一個原因是因為你的 Ubuntu 已經螢幕鎖定了，需要解鎖<br><a href="https://help.ubuntu.com/stable/ubuntu-help/session-screenlocks.html" rel="noopener" target="_blank">解除螢幕鎖定</a>：<code>Settings</code> &gt; <code>Privacy &amp; Security</code><br>如果 <code>Automatic Screen Lock</code> 已開啟，將其關閉。</p><p>以上就是 macOS 下 RDP client 遠端桌面軟體介紹，<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 紀錄 macOS 下 RDP client 軟體，RDP 就是我們常聽到 Windows 的遠端桌面使用的協議，這次我是要在macOS 下 RDP client 來連接到遠端的 Ubuntu 24.04 電腦，而 Ubuntu 24.04 內建的就是支
      
    
    </summary>
    
    
      <category term="macOS" scheme="https://shengyu7697.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 下使用 rm 指令如何避免誤刪除</title>
    <link href="https://shengyu7697.github.io/ubuntu-prevent-accidental-deletion-with-rm-command/"/>
    <id>https://shengyu7697.github.io/ubuntu-prevent-accidental-deletion-with-rm-command/</id>
    <published>2024-07-10T12:00:00.000Z</published>
    <updated>2024-07-03T23:40:08.385Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹在 Ubuntu 下使用 rm 指令如何避免誤刪除，在使用 Ubuntu 的過程中，檔案管理是日常操作中不可或缺的一部分。其中，rm 指令是刪除檔案和目錄的常用工具。然而，不小心刪除了重要檔案是一個常見且令人沮喪的問題，本人可是有切身之痛阿，曾經誤刪除重要資料然後使用救援工具挽救資料，最後還是流失不少重要資料。本文將介紹幾種方法，幫助你在 Ubuntu 中使用 rm 指令時避免誤刪除檔案。</p><p>你可以透過將 <code>rm</code> 指令別名為 <code>trash</code> 來實現使用 <code>trash-cli</code> 工具代替 <code>rm</code> 指令的效果。這樣，每當你使用 <code>rm</code> 指令時，檔案將被移動到垃圾桶而不是直接刪除。以下是具體步驟：</p><h2><span id="1-安裝-trash-cli">1. 安裝 <code>trash-cli</code></span></h2><p>首先，確保你已經安裝了 <code>trash-cli</code> 工具。如果還沒有安裝，可以使用以下指令進行安裝：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install trash-cli</span><br></pre></td></tr></table></figure></p><h2><span id="2-建立別名">2. 建立別名</span></h2><p>打開你的 <code>~/.bashrc</code> 檔案（或 <code>~/.zshrc</code> 檔案，如果你使用 Zsh）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure></p><p>在檔案末尾新增以下行，將 <code>rm</code> 指令別名為 <code>trash</code>：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> rm=<span class="string">'trash-put'</span></span><br></pre></td></tr></table></figure></p><h2><span id="3-重新載入設定檔案">3. 重新載入設定檔案</span></h2><p>保存並關閉檔案，然後重新載入 <code>~/.bashrc</code> 檔案以使更改生效：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></p><h2><span id="4-驗證">4. 驗證</span></h2><p>現在，你可以驗證新的 <code>rm</code> 別名是否正常工作。嘗試刪除一個檔案：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch testfile</span><br><span class="line">rm testfile</span><br></pre></td></tr></table></figure></p><p>然後，檢查檔案是否在垃圾桶中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trash-list</span><br></pre></td></tr></table></figure></p><p>你應該能看到 <code>testfile</code> 在垃圾桶中。</p><h2><span id="5-還原檔案">5. 還原檔案</span></h2><p>如果你誤刪了檔案，可以使用 <code>trash-restore</code> 指令恢覆檔案：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trash-restore</span><br></pre></td></tr></table></figure></p><p>按照提示選擇你要恢覆的檔案。</p><p>透過這些步驟，你可以將 <code>rm</code> 指令別名為 <code>trash</code>，這樣在刪除檔案時，它們會被移動到垃圾桶，而不是直接刪除，從而有效避免誤刪檔案。</p><p>要清空垃圾桶，你可以使用 <code>trash-empty</code> 指令。這個指令會永久刪除垃圾桶中的所有檔案。你也可以選擇只刪除一定天數前的檔案。以下是一些常用的方法：</p><h2><span id="6-清空所有垃圾桶內容">6. 清空所有垃圾桶內容</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trash-empty</span><br></pre></td></tr></table></figure><p>這個指令會永久刪除垃圾桶中的所有檔案。</p><h2><span id="7-清空指定天數之前的檔案">7. 清空指定天數之前的檔案</span></h2><p>如果你只想刪除一定天數之前的檔案，例如，刪除7天前的檔案，可以使用：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trash-empty 7</span><br></pre></td></tr></table></figure></p><p>這個指令會永久刪除垃圾桶中7天前的檔案。</p><h2><span id="3-查看幫助">3. 查看幫助</span></h2><p>如果你需要更多關於 <code>trash-empty</code> 指令的資訊，可以查看幫助：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trash-empty --<span class="built_in">help</span></span><br></pre></td></tr></table></figure></p><p>以上就是 Ubuntu 下使用 rm 指令如何避免誤刪除介紹，<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p><strong>其它相關文章推薦</strong><br><a href="/mac-ubuntu-prevent-accidental-deletion-with-rm-command/" title="macOS 下使用 rm 指令如何避免誤刪除">macOS 下使用 rm 指令如何避免誤刪除</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹在 Ubuntu 下使用 rm 指令如何避免誤刪除，在使用 Ubuntu 的過程中，檔案管理是日常操作中不可或缺的一部分。其中，rm 指令是刪除檔案和目錄的常用工具。然而，不小心刪除了重要檔案是一個常見且令人沮喪的問題，本人可是有切身之痛阿，曾經誤
      
    
    </summary>
    
    
      <category term="Ubuntu" scheme="https://shengyu7697.github.io/tags/Ubuntu/"/>
    
      <category term="Linux Command" scheme="https://shengyu7697.github.io/tags/Linux-Command/"/>
    
      <category term="Linux" scheme="https://shengyu7697.github.io/tags/Linux/"/>
    
      <category term="Shell Script" scheme="https://shengyu7697.github.io/tags/Shell-Script/"/>
    
  </entry>
  
  <entry>
    <title>Linux 全面了解 Nmap：用途、範例及應用指南</title>
    <link href="https://shengyu7697.github.io/linux-nmap/"/>
    <id>https://shengyu7697.github.io/linux-nmap/</id>
    <published>2024-07-07T12:00:00.000Z</published>
    <updated>2024-06-19T14:00:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>Nmap（Network Mapper）是一個強大且開源的網路掃描工具，被廣泛應用於網路探索和安全審計。無論您是網路管理員還是安全專業人員，Nmap 都是您不可或缺的工具。在這篇文章中，我們將詳細介紹 Nmap 的主要用途，並提供一些實用的範例，幫助您更好地掌握這個工具的應用。</p><h2><span id="nmap-的主要用途">Nmap 的主要用途</span></h2><p>Nmap 的功能非常豐富，以下是其主要用途：</p><ol><li><p><strong>發現主機</strong>：<br>使用 Nmap，可以迅速確定網路上哪些主機是活動的，這對於大型網路尤其重要。主機發現是網路管理的基礎工作，有助於管理和優化網路資源。</p></li><li><p><strong>連接埠掃描</strong>：<br>Nmap 可以掃描目標主機的開放連接埠，幫助您了解哪些服務正在執行。連接埠掃描有助於識別潛在的安全漏洞和不必要的開放連接埠。</p></li><li><p><strong>服務識別</strong>：<br>除了確定連接埠是否開放，Nmap 還能進一步識別這些連接埠上執行的應用程式及其版本。這對於管理和保護網路上的服務至關重要。</p></li><li><p><strong>作業系統檢測</strong>：<br>Nmap 具備強大的作業系統檢測功能，可以判斷目標主機的作業系統及其版本，這對於制定安全策略和漏洞修復計劃至關重要。</p></li><li><p><strong>安全審計</strong>：<br>Nmap 的強大功能使其成為進行安全審計的理想工具。它可以幫助檢查網路裝置和服務的漏洞，確保您的網路環境安全可靠。</p></li></ol><h2><span id="nmap-的安裝方式">Nmap 的安裝方式</span></h2><p>在 mac 下可以使用 <code>brew install nmap</code> 來安裝 Nmap</p><p>在 Ubuntu 下可以使用 <code>sudo apt install nmap</code> 來安裝 Nmap</p><h2><span id="nmap-的常見範例">Nmap 的常見範例</span></h2><p>以下是一些常見的 Nmap 使用範例，這些範例展示了 Nmap 的不同功能和應用場景：</p><ol><li><p><strong>基本掃描</strong>：<br>這是最基本的 Nmap 使用方式，用於掃描指定的 IP 或域名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap &lt;目標IP或域名&gt;</span><br></pre></td></tr></table></figure><p>範例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.1.1</span><br></pre></td></tr></table></figure></li><li><p><strong>掃描特定連接埠</strong>：<br>您可以指定要掃描的連接埠範圍，這對於僅需檢查特定服務的情況非常有用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p &lt;連接埠範圍&gt; &lt;目標IP&gt;</span><br></pre></td></tr></table></figure><p>範例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 80,443 192.168.1.1</span><br></pre></td></tr></table></figure></li><li><p><strong>服務版本檢測</strong>：<br>這個選項用於識別正在執行的應用程式及其版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV &lt;目標IP&gt;</span><br></pre></td></tr></table></figure><p>範例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 192.168.1.1</span><br></pre></td></tr></table></figure></li><li><p><strong>作業系統檢測</strong>：<br>Nmap 可以用來判斷目標主機的作業系統。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O &lt;目標IP&gt;</span><br></pre></td></tr></table></figure><p>範例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O 192.168.1.1</span><br></pre></td></tr></table></figure></li><li><p><strong>使用 Ping 掃描發現活躍主機</strong>：<br>這個選項用來掃描整個網段，找出哪些主機是活躍的。<code>-sn</code>: 這個選項表示僅進行 Ping 掃描，也稱為「主機發現模式」。它不會掃描連接埠，而是檢查哪些主機是活動的（在線的）。執行這個指令的結果是 Nmap 將告訴你這個 IP 範圍內有哪些主機是在線的，而不會提供有關這些主機上開放的連接埠或執行的服務的資訊。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn &lt;目標網段&gt;</span><br></pre></td></tr></table></figure><p>範例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>這個選項用來掃描某個範圍的。這個指令指定了從 <code>192.168.1.1</code> 到 <code>192.168.1.255</code> 的 IP 地址範圍</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn 192.168.1.1-255</span><br></pre></td></tr></table></figure><p>以下這個指令指定了從 <code>192.168.1.100</code> 到 <code>192.168.1.200</code> 的 IP 地址範圍，例如我區網下有一台Raspberry Pi，我就可以用 nmap 去掃描DHCP分配給的IP，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn 192.168.1.100-200</span><br></pre></td></tr></table></figure></li><li><p><strong>進行 UDP 掃描</strong>：<br>除了 TCP 掃描，Nmap 還能進行 UDP 掃描，這對於檢查 UDP 服務非常重要。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sU &lt;目標IP&gt;</span><br></pre></td></tr></table></figure><p>範例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sU 192.168.1.1</span><br></pre></td></tr></table></figure></li><li><p><strong>檢查特定主機的所有開放連接埠</strong>：<br>使用此指令，可以檢查目標主機上的所有連接埠。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- &lt;目標IP&gt;</span><br></pre></td></tr></table></figure><p>範例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- 192.168.1.1</span><br></pre></td></tr></table></figure></li><li><p><strong>啟用 Aggressive 模式進行詳細掃描</strong>：<br>Aggressive 模式將啟用更多的 Nmap 特性，包括作業系統檢測、版本檢測和路徑追蹤。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A &lt;目標IP&gt;</span><br></pre></td></tr></table></figure><p>範例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.1.1</span><br></pre></td></tr></table></figure></li></ol><h2><span id="nmap-的應用場景">Nmap 的應用場景</span></h2><p>Nmap 不僅在網路管理和安全審計中發揮重要作用，還能應用於其他多種場景。例如，在企業網路中，網路管理員可以使用 Nmap 進行常規的網路檢查和維護，確保網路資源的最佳設定和執行。在安全領域，安全專業人員可以使用 Nmap 來進行滲透測試和漏洞評估，確保系統免受攻擊。</p><p>Nmap 還支持豐富的腳本（NSE，Nmap Scripting Engine），這些腳本可以用來自動化任務和擴展功能，使其更適合於複雜的網路環境和特定的安全需求。</p><p>總結來說，Nmap 是一個功能強大且靈活的工具，其廣泛的應用範圍和強大的功能使其成為網路管理和安全領域中不可或缺的工具。無論是進行簡單的網路掃描還是複雜的安全審計，Nmap 都能幫助您高效地完成任務，確保網路環境的安全和穩定。</p><p>以上就是 Linux Nmap 指令用法範例的介紹，<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Nmap（Network Mapper）是一個強大且開源的網路掃描工具，被廣泛應用於網路探索和安全審計。無論您是網路管理員還是安全專業人員，Nmap 都是您不可或缺的工具。在這篇文章中，我們將詳細介紹 Nmap 的主要用途，並提供一些實用的範例，幫助您更好地掌握這個工具的應
      
    
    </summary>
    
    
      <category term="Ubuntu" scheme="https://shengyu7697.github.io/tags/Ubuntu/"/>
    
      <category term="Linux Command" scheme="https://shengyu7697.github.io/tags/Linux-Command/"/>
    
      <category term="Linux" scheme="https://shengyu7697.github.io/tags/Linux/"/>
    
      <category term="Shell Script" scheme="https://shengyu7697.github.io/tags/Shell-Script/"/>
    
  </entry>
  
  <entry>
    <title>了解 PHP 中的 session_start() 函式用途與範例</title>
    <link href="https://shengyu7697.github.io/php-session_start/"/>
    <id>https://shengyu7697.github.io/php-session_start/</id>
    <published>2024-07-06T12:00:00.000Z</published>
    <updated>2024-06-06T23:31:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹 PHP session_start 用法與範例，在 PHP 開發中，<code>session_start();</code> 函式扮演著關鍵的角色，尤其在管理使用者會話和保存使用者資料方面。本文將詳細介紹 <code>session_start();</code> 函式的作用、用法以及使用時需注意的事項。</p><h2><span id="1-會話session的基本概念">1. 會話（Session）的基本概念</span></h2><p>會話是一種在使用者與網站之間保持狀態的機制。透過會話，我們能夠在使用者訪問網站的不同頁面之間儲存和共享使用者資料，如登錄狀態、購物車內容等。</p><h2><span id="2-session_start-的作用與功能">2. <code>session_start();</code> 的作用與功能</span></h2><p><code>session_start();</code> 函式的主要作用是啟動一個新的會話或恢復現有的會話。它執行以下主要任務：</p><ul><li>檢查是否已存在會話 ID，若無則建立新的會話 ID。</li><li>載入會話資料，並將其儲存在伺服器端。</li><li>設定會話變數，使開發者可以儲存和訪問會話資料。</li></ul><h2><span id="3-使用-session_start-的範例">3. 使用 <code>session_start();</code> 的範例</span></h2><p>以下是一個簡單的範例，示範了如何使用 <code>session_start();</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 啟動會話</span></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 設定會話變數</span></span><br><span class="line">$_SESSION[<span class="string">'username'</span>] = <span class="string">'exampleUser'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 訪問會話變數</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Hello, '</span> . $_SESSION[<span class="string">'username'</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在此範例中，我們首先啟動了會話，然後設定了一個會話變數 <code>username</code>，最後訪問了該變數。這樣，無論使用者訪問網站的哪個頁面，都可以取得並使用這個會話變數。</p><h2><span id="4-使用-session_start-的注意事項">4. 使用 <code>session_start();</code> 的注意事項</span></h2><p>在使用 <code>session_start();</code> 函式時，需要注意以下事項：</p><ul><li>呼叫 <code>session_start();</code> 應該在所有的 HTML 輸出之前，以避免可能的錯誤。</li><li>確保伺服器的會話儲存設定正確，以免造成安全風險或性能問題。</li></ul><h2><span id="5-結合-mysqli-的範例">5. 結合 mysqli 的範例</span></h2><p>在這個範例中，我們結合了 <code>session_start();</code> 和 mysqli，首先建立了 mysqli 連接，然後啟動了會話，設定了會話變數 <code>username</code>，最後使用 <code>$_SESSION[&#39;username&#39;]</code> 來查詢資料庫中的使用者資訊。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 建立 mysqli 連接</span></span><br><span class="line">$mysqli = <span class="keyword">new</span> mysqli(<span class="string">"localhost"</span>, <span class="string">"username"</span>, <span class="string">"password"</span>, <span class="string">"database"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 檢查連接是否成功</span></span><br><span class="line"><span class="keyword">if</span> ($mysqli-&gt;connect_error) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"連接失敗: "</span> . $mysqli-&gt;connect_error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟動會話</span></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 設定會話變數</span></span><br><span class="line">$_SESSION[<span class="string">'username'</span>] = <span class="string">'exampleUser'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 mysqli 進行資料庫操作</span></span><br><span class="line">$query = <span class="string">"SELECT * FROM users WHERE username = '"</span> . $_SESSION[<span class="string">'username'</span>] . <span class="string">"'"</span>;</span><br><span class="line">$result = $mysqli-&gt;query($query);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($result-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">// 輸出資料</span></span><br><span class="line">    <span class="keyword">while</span> ($row = $result-&gt;fetch_assoc()) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"使用者名: "</span> . $row[<span class="string">"username"</span>] . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"郵箱: "</span> . $row[<span class="string">"email"</span>] . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"0 結果"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 關閉 mysqli 連接</span></span><br><span class="line">$mysqli-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="6-結合-pdo-的範例">6. 結合 PDO 的範例</span></h2><p>在這個範例中，我們結合了 <code>session_start();</code> 和 PDO，首先建立了 PDO 連接，然後啟動了會話，設定了會話變數 <code>username</code>，最後使用 PDO 查詢了資料庫中的使用者資訊。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// PDO 連接資料庫</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    $pdo = <span class="keyword">new</span> PDO(<span class="string">"mysql:host=localhost;dbname=mydatabase"</span>, <span class="string">"username"</span>, <span class="string">"password"</span>);</span><br><span class="line">    $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);</span><br><span class="line">&#125; <span class="keyword">catch</span> (PDOException $e) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"資料庫連接失敗: "</span> . $e-&gt;getMessage());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟動會話</span></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 設定會話變數</span></span><br><span class="line">$_SESSION[<span class="string">'username'</span>] = <span class="string">'exampleUser'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 PDO 查詢資料庫</span></span><br><span class="line">$stmt = $pdo-&gt;prepare(<span class="string">"SELECT * FROM users WHERE username = :username"</span>);</span><br><span class="line">$stmt-&gt;bindParam(<span class="string">':username'</span>, $_SESSION[<span class="string">'username'</span>]);</span><br><span class="line">$stmt-&gt;execute();</span><br><span class="line"></span><br><span class="line">$result = $stmt-&gt;fetch(PDO::FETCH_ASSOC);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($result) &#123;</span><br><span class="line">    <span class="comment">// 輸出資料</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"使用者名: "</span> . $result[<span class="string">"username"</span>] . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"郵箱: "</span> . $result[<span class="string">"email"</span>] . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"0 結果"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="7-常見錯誤">７. 常見錯誤</span></h2><p>如果遇到 <code>Warning: session_start(): Session cannot be started after headers have already been sent</code> 代表什麼意思呢？這個錯誤通常出現在嘗試呼叫 <code>session_start()</code> 函式時，而在此之前已經有輸出發送到瀏覽器了。這是因為 <code>session_start()</code> 需要在任何輸出（包括空格、HTML標簽、錯誤資訊等）之前呼叫。</p><p><strong>解決方法1：確保 <code>session_start()</code> 在腳本的最頂部</strong><br>確保 <code>session_start()</code> 是腳本中的第一個呼叫，位於任何 HTML 或 PHP 輸出之前。例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="comment">// 你的其他程式碼</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>解決方法2：檢查包括的檔案</strong><br>確保所有包含的檔案在 <code>session_start()</code> 呼叫之前也沒有任何輸出。例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>); <span class="comment">// 確保 config.php 沒有輸出</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>解決方法3：避免多余的空格或新行</strong><br>確保在 <code>&lt;?php</code> 之前和 <code>?&gt;</code> 之後沒有任何空格或新行。即使是一個空格也會被視為輸出。例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 確保檔案開始處沒有空格或新行</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>解決方法4：使用輸出緩沖</strong><br>如果你無法確定在哪些地方可能有輸出，可以使用輸出緩沖來捕獲任何意外的輸出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ob_start();</span><br><span class="line">session_start();</span><br><span class="line"><span class="comment">// 你的其他程式碼</span></span><br><span class="line">ob_end_flush();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果你仍然遇到問題，可以在 <code>session_start()</code> 呼叫之前新增以下程式碼，幫助確定已經發送的輸出位置：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (headers_sent($file, $line)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"Headers already sent in $file on line $line"</span>);</span><br><span class="line">&#125;</span><br><span class="line">session_start();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>這段程式碼會檢查是否已經發送了頭資訊，並報告具體的位置，這樣你就可以準確地找出並修正問題。</p><h2><span id="結語">結語</span></h2><p><code>session_start();</code> 函式是 PHP 開發中一個非常重要的工具，它使我們能夠有效地管理使用者會話和資料。透過深入理解它的作用和使用方式，開發者可以更好地利用會話機制，為使用者提供更好的網站體驗。</p><p>希望本篇能幫助您更好地理解 PHP <code>session_start();</code> 函式的作用與使用方式！<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p><strong>其它相關文章推薦</strong><br>如果你想學習 PHP 相關技術，可以參考看看下面的文章，<br><a href="/php-pdo/" title="PHP 和 PDO 進行資料庫操作">PHP 和 PDO 進行資料庫操作</a><br><a href="/php-display-errors/" title="PHP 執行發生錯誤在 Chrome/Firefox 上顯示 Error 500，要怎麼讓 PHP 顯示錯誤">PHP 執行發生錯誤在 Chrome/Firefox 上顯示 Error 500，要怎麼讓 PHP 顯示錯誤</a><br><a href="/php-substr/" title="PHP substr 函式全面解析與應用範例">PHP substr 函式全面解析與應用範例</a><br><a href="/php-isset/" title="深入理解 PHP 中的 isset 用法、範例及最佳實踐">深入理解 PHP 中的 isset 用法、範例及最佳實踐</a><br><a href="/php-post/" title="PHP $_POST 變數用途、語法與實用範例詳解">PHP $_POST 變數用途、語法與實用範例詳解</a><br><a href="/php-session/" title="PHP 中的 Session 用途與實踐範例：完整指南">PHP 中的 Session 用途與實踐範例：完整指南</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹 PHP session_start 用法與範例，在 PHP 開發中，&lt;code&gt;session_start();&lt;/code&gt; 函式扮演著關鍵的角色，尤其在管理使用者會話和保存使用者資料方面。本文將詳細介紹 &lt;code&gt;session_start
      
    
    </summary>
    
      <category term="PHP教學" scheme="https://shengyu7697.github.io/categories/PHP%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="PHP" scheme="https://shengyu7697.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>如何使用 Python slack_sdk 發送訊息給 Slack</title>
    <link href="https://shengyu7697.github.io/python-slack_sdk/"/>
    <id>https://shengyu7697.github.io/python-slack_sdk/</id>
    <published>2024-07-04T12:00:00.000Z</published>
    <updated>2024-07-04T15:00:06.468Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹如何使用 Python 透過 slack_sdk 發送訊息到 Slack，在現代開發環境中，能夠快速與團隊溝通是提升工作效率的關鍵之一。Slack 作為一個廣泛使用的團隊協作工具，提供了強大的 API，可以讓開發者輕鬆地自動化各種操作。本文將介紹如何使用 <code>slack_sdk</code> 這個 Python 套件來發送訊息到 Slack 頻道。</p><h2><span id="步驟-1安裝-slack_sdk-套件">步驟 1：安裝 slack_sdk 套件</span></h2><p>如果傾向使用虛擬環境的話，請用以下指令，要離開虛擬環境的話要下 <code>deactivate</code> 指令，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python -m venv myenv</span><br><span class="line">source myenv/bin/activate</span><br></pre></td></tr></table></figure><p>首先，我們需要安裝 <code>slack_sdk</code> 套件。在終端中運行以下命令來安裝它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install slack_sdk</span><br></pre></td></tr></table></figure><p>這個命令會安裝 <code>slack_sdk</code> 到你的 Python 環境中，使你能夠在 Python 代碼中使用它。</p><h2><span id="步驟-2取得-slack-bot-token">步驟 2：取得 Slack Bot Token</span></h2><p>要與 Slack API 互動，你需要一個 Slack Bot Token。按照以下步驟來獲取這個 token：</p><ol><li>登錄到 <a href="https://api.slack.com/" rel="noopener" target="_blank">Slack API</a> 頁面。</li><li>點擊“Create an app”按鈕，選擇“From scratch”。</li><li>為你的應用程式命名，並選擇你要將其添加到的工作區。</li><li>創建應用後，進入“OAuth &amp; Permissions”頁面，並在“Scopes”部分添加 <code>chat:write</code> scope。</li><li>點擊“Install App to Workspace”按鈕，並授權應用程式。</li><li>完成後，你將看到一個 Bot User OAuth Token。複製這個 token，稍後會在代碼中用到。</li></ol><p>轉到“OAuth和權限”選項卡，向下滾動到Scopes卡片，在Bot Token Scopes下，點選“Add OAuth Scope”來新增’chat:write’，’chat:write.customize’，’files:read’，’files:write’Scopes（總共需要點選“新增OAuthScopes”四次）。</p><h2><span id="步驟-3編寫-python-代碼發送訊息">步驟 3：編寫 Python 代碼發送訊息</span></h2><p>有了 <code>slack_sdk</code> 套件和 Bot Token，我們就可以開始編寫代碼來發送訊息。以下是示範代碼，<br>將 xoxb-your-slack-bot-token 替換為您的 Slack Bot Token，不想寫在code裡也可用 <code>os.environ[&quot;SLACK_BOT_TOKEN&quot;]</code> 來取得 SLACK_BOT_TOKEN 環境變數，<br>之後再呼叫 chat_postMessage 方法發送訊息，<br>將 channel 替換為您的頻道 ID 或使用者名，將 text 換成你要傳輸的內容，<br>try except 則是捕獲錯誤並打印，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">from</span> slack_sdk <span class="keyword">import</span> WebClient</span><br><span class="line"><span class="keyword">from</span> slack_sdk.errors <span class="keyword">import</span> SlackApiError</span><br><span class="line"><span class="comment">#import os</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 輸入你的 Slack Bot Token</span></span><br><span class="line">slack_token = <span class="string">"xoxb-your-slack-bot-token"</span></span><br><span class="line"><span class="comment">#slack_token = os.environ["SLACK_BOT_TOKEN"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立 Slack 客戶端</span></span><br><span class="line">client = WebClient(token=slack_token)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 發送訊息到指定頻道</span></span><br><span class="line">    response = client.chat_postMessage(</span><br><span class="line">        channel=<span class="string">"#general"</span>,  <span class="comment"># 替換成你的頻道 ID 或名稱</span></span><br><span class="line">        text=<span class="string">"Hello, world!"</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">assert</span> response[<span class="string">"message"</span>][<span class="string">"text"</span>] == <span class="string">"Hello, world!"</span></span><br><span class="line">    print(<span class="string">"訊息發送成功"</span>)</span><br><span class="line">    <span class="comment">#print(response["ok"])</span></span><br><span class="line"><span class="keyword">except</span> SlackApiError <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">f"發送訊息失敗: <span class="subst">&#123;e.response[<span class="string">'error'</span>]&#125;</span>"</span>)</span><br></pre></td></tr></table></figure><p>在這段代碼中，我們首先從 <code>slack_sdk</code> 導入 <code>WebClient</code> 和 <code>SlackApiError</code>。然後使用你的 Bot Token 創建一個 Slack 客戶端，並使用 <code>chat_postMessage</code> 方法發送訊息到指定頻道。如果訊息發送成功，你將看到“訊息發送成功”的提示；否則，會顯示錯誤訊息。</p><p>如果想發送可點擊超連結URL的話，像下面這樣，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text=&quot;&lt;https://shengyu7697.github.io/linux-watch/|Linux watch 指令用法與範例&gt; 參考這篇&quot;</span><br></pre></td></tr></table></figure></p><p>另外簡單介紹其他種類型，粗体、斜体、链接、列表，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text=&quot;*Bold* _Italic_ `Code` &lt;http://example.com|Link&gt;&quot;</span><br></pre></td></tr></table></figure></p><h2><span id="結論">結論</span></h2><p>使用 <code>slack_sdk</code> 套件發送訊息到 Slack 是一個簡單且強大的自動化方法。只需按照上述步驟安裝套件、獲取 Bot Token 並編寫代碼，即可輕鬆實現訊息的自動發送。這不僅能夠提升你的工作效率，還能使團隊溝通更加順暢。</p><p>另外還有發送圖片、附件檔案、Emoji 的方式，有興趣的話可以留言讓我知道，有機會我另外寫一篇介紹。</p><p>以上就是如何使用 Python 發送訊息給 Slack 的介紹，<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p>其他參考<br><a href="https://blog.learning520.com/2024/01/16/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8python%E5%8F%91%E9%80%81slack%E6%B6%88%E6%81%AF/" rel="noopener" target="_blank">如何使用Python发送Slack消息</a><br><a href="https://blog.crazyfan.net/posts/2017/04/08/slack_incoming_webhooks/" rel="noopener" target="_blank">使用 Slack API 傳遞訊息至 Slack頻道</a><br><a href="https://blog.darkthread.net/blog/slack-api/" rel="noopener" target="_blank">為自己寫程式 - 簡單寫個 .NET Slack 訊息發送程式</a></p><p><strong>其它相關文章推薦</strong><br><a href="/python-tutorial/" title="Python 新手入門教學懶人包">Python 新手入門教學懶人包</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹如何使用 Python 透過 slack_sdk 發送訊息到 Slack，在現代開發環境中，能夠快速與團隊溝通是提升工作效率的關鍵之一。Slack 作為一個廣泛使用的團隊協作工具，提供了強大的 API，可以讓開發者輕鬆地自動化各種操作。本文將介紹如
      
    
    </summary>
    
      <category term="Python教學" scheme="https://shengyu7697.github.io/categories/Python%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="Python" scheme="https://shengyu7697.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>macOS 下使用 rm 指令如何避免誤刪除</title>
    <link href="https://shengyu7697.github.io/mac-ubuntu-prevent-accidental-deletion-with-rm-command/"/>
    <id>https://shengyu7697.github.io/mac-ubuntu-prevent-accidental-deletion-with-rm-command/</id>
    <published>2024-07-01T12:00:00.000Z</published>
    <updated>2024-07-03T23:40:08.385Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹 macOS 下使用 rm 指令如何避免誤刪除，在 macOS 下，使用 <code>rm</code> 指令刪除檔案和目錄是一種常見的操作。然而，誤刪除重要檔案可能帶來不小的麻煩。為了防止這類情況，我們可以採用一些替代方法來減少風險，其中之一便是使用 <code>trash</code> 指令。這篇文章將介紹如何在 macOS 上安裝和使用 <code>trash</code> 指令，讓你的檔案刪除操作更加安全可靠。</p><h2><span id="什麼是-trash-指令">什麼是 <code>trash</code> 指令？</span></h2><p><code>trash</code> 指令是一個指令行工具，它將檔案移動到系統的垃圾桶，而不是直接永久刪除。這樣，即使你誤刪除了檔案，也可以輕鬆地從垃圾桶中還原。</p><h2><span id="為什麼選擇-trash-指令">為什麼選擇 <code>trash</code> 指令？</span></h2><ol><li><strong>還原檔案</strong>：誤刪除的檔案可以從垃圾桶中輕鬆還原。</li><li><strong>安全可靠</strong>：減少了使用 <code>rm</code> 指令時誤刪除重要檔案的風險。</li><li><strong>易於使用</strong>：<code>trash</code> 指令的使用方法與 <code>rm</code> 指令類似，學習成本低。</li></ol><h2><span id="如何在-macos-上安裝-trash-指令">如何在 macOS 上安裝 <code>trash</code> 指令？</span></h2><p>首先，我們需要安裝 Homebrew，這是一個 macOS 的包管理器。如果你的系統中尚未安裝 Homebrew，可以透過以下指令來安裝：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>"</span></span><br></pre></td></tr></table></figure><p>安裝完成後，可以使用 Homebrew 來安裝 <code>trash</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install trash</span><br></pre></td></tr></table></figure><p>在 macOS 下建議不要用 <a href="https://formulae.brew.sh/formula/trash-cli" rel="noopener" target="_blank">trash-cli</a> <code>brew install trash-cli</code> 這套而是使用 <a href="https://formulae.brew.sh/formula/trash" rel="noopener" target="_blank">trash</a> 這套，因為 trash-cli 會丟到 <code>~/.local/share/Trash</code> 不會丟進 Finder 的垃圾桶，這樣不方便結合 Finder 的操作。</p><h2><span id="如何使用-trash-指令">如何使用 <code>trash</code> 指令？</span></h2><p><code>trash</code> 指令的基本使用方法與 <code>rm</code> 指令類似，只需將 <code>rm</code> 替換為 <code>trash</code> 即可。例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trash filename</span><br></pre></td></tr></table></figure><p>如果你想刪除多個檔案，可以這樣操作：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trash file1 file2 file3</span><br></pre></td></tr></table></figure><h2><span id="使用-alias-別名替換-rm-指令">使用 alias 別名替換 <code>rm</code> 指令</span></h2><p>為了進一步簡化操作並降低風險，我們可以為 <code>rm</code> 指令設定別名，使其預設使用 <code>trash</code> 指令。這樣，每次你使用 <code>rm</code> 指令時，實際上會呼叫 <code>trash</code> 指令。</p><p>打開你的 shell 設定檔案（例如 <code>.bashrc</code>、<code>.zshrc</code> 或 <code>.bash_profile</code>），並新增以下行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> rm=<span class="string">'trash'</span></span><br></pre></td></tr></table></figure><p>保存檔案並重新載入設定：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc   <span class="comment"># 或 source ~/.zshrc</span></span><br></pre></td></tr></table></figure><p>這樣，當你輸入 <code>rm filename</code> 時，實際上會執行 <code>trash filename</code>，避免了誤刪除檔案的風險。</p><h2><span id="如何從垃圾桶中還原檔案">如何從垃圾桶中還原檔案？</span></h2><p>要還原誤刪除的檔案，可以打開 Finder，然後導航到垃圾桶。找到你需要還原的檔案，右鍵點擊選擇<code>還原</code>即可。</p><h3><span id="結論">結論</span></h3><p>在 macOS 下使用 <code>rm</code> 指令時，誤刪除檔案是一個常見問題。使用 <code>trash</code> 指令可以有效避免這一風險，並提供一個安全的檔案刪除替代方案。透過設定 alias 別名，你可以進一步簡化操作，確保檔案刪除過程更加安全可靠。希望這篇文章能幫助你更好地保護你的重要檔案，提升你的 macOS 使用體驗。</p><p>以上就是 macOS 下使用 rm 指令如何避免誤刪除的介紹，<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p><strong>其它相關文章推薦</strong><br><a href="/ubuntu-prevent-accidental-deletion-with-rm-command/" title="Ubuntu 下使用 rm 指令如何避免誤刪除">Ubuntu 下使用 rm 指令如何避免誤刪除</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹 macOS 下使用 rm 指令如何避免誤刪除，在 macOS 下，使用 &lt;code&gt;rm&lt;/code&gt; 指令刪除檔案和目錄是一種常見的操作。然而，誤刪除重要檔案可能帶來不小的麻煩。為了防止這類情況，我們可以採用一些替代方法來減少風險，其中之一便是
      
    
    </summary>
    
    
      <category term="macOS" scheme="https://shengyu7697.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>Linux nohup 斷線不中斷程式執行用法範例</title>
    <link href="https://shengyu7697.github.io/linux-nohup/"/>
    <id>https://shengyu7697.github.io/linux-nohup/</id>
    <published>2024-06-30T12:00:00.000Z</published>
    <updated>2024-06-16T13:45:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹 Linux nohup 指令用法，<code>nohup</code> 是一個 Linux 指令，用於執行指令時忽略 Hangup（斷開連線）訊號，使指令在後台執行，即使使用者退出登錄會話或斷開連線，該指令也將繼續執行。有時我們需要執行耗時較長的指令或行程，但希望即使在退出終端或斷開連線後，這些行程仍然能夠持續執行。這就是 nohup 指令的用武之地。現在讓我們簡單介紹一下 <code>nohup</code> 指令的基本用法、其他常見用法以及一些進階技巧和常用選項。</p><h2><span id="基本用法">基本用法</span></h2><p>要使用 <code>nohup</code>，只需在要執行的指令之前加上 <code>nohup</code>，然後在指令後面加上 <code>&amp;</code> 以將其放入後台執行。例如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup <span class="built_in">command</span> &amp;</span><br></pre></td></tr></table></figure></p><p>這將使 <code>command</code> 在後台持續執行，即使使用者退出登錄會話或斷開連線。</p><h2><span id="其他常見用法">其他常見用法</span></h2><p><code>nohup</code> 指令將輸出重導向到檔案，範例如下，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup <span class="built_in">command</span> &gt; output.log &amp;</span><br></pre></td></tr></table></figure></p><p>這將 <code>command</code> 的輸出重導向到指定的檔案 <code>output.log</code> 中，以便您稍後查閱。</p><p><code>nohup</code> 指令忽略所有輸入，範例如下，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup <span class="built_in">command</span> &gt; /dev/null &amp;</span><br></pre></td></tr></table></figure></p><p>這將使 <code>command</code> 忽略所有輸入，並將所有輸出重導向到 <code>/dev/null</code>，即丟棄輸出。</p><h2><span id="nohup-常用選項"><code>nohup</code> 常用選項</span></h2><p><code>-p</code>：將 <code>nohup</code> 指令的行程 ID（PID）寫入指定檔案。<br><code>-c</code>：指定要執行的指令。<br><code>-f</code>：使指令在前台執行，即使有斷開連線的風險。</p><h2><span id="結語">結語</span></h2><p><code>nohup</code> 指令是在 Linux 系統中執行長時間指令的有用工具。透過將指令放入後台執行並忽略 Hangup 訊號，它可以確保即使在登錄會話結束後，指令仍然持續執行。藉助適當的輸出重導向，您可以將指令的輸出保存到檔案中，以便稍後檢查。<code>nohup</code> 的進階選項可以提供更多靈活性和控制，讓您更好地管理執行中的指令。</p><p>以上就是 Linux nohup 指令用法範例的介紹，<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p><strong>其它相關文章推薦</strong><br><a href="/linux-tutorial/" title="Linux 常用指令教學懶人包">Linux 常用指令教學懶人包</a><br><a href="/linux-wget/" title="Linux wget 下載檔案用法與範例">Linux wget 下載檔案用法與範例</a><br><a href="/linux-sed/" title="Linux sed 字串取代用法與範例">Linux sed 字串取代用法與範例</a><br><a href="/linux-find/" title="Linux find 尋找檔案/尋找資料夾用法與範例">Linux find 尋找檔案/尋找資料夾用法與範例</a><br><a href="/linux-grep-ack-ag/" title="Linux grep/ack/ag 搜尋字串用法與範例">Linux grep/ack/ag 搜尋字串用法與範例</a><br><a href="/linux-tee/" title="Linux tee 同時螢幕標準輸出和輸出到檔案用法與範例">Linux tee 同時螢幕標準輸出和輸出到檔案用法與範例</a><br><a href="/linux-xargs/" title="Linux xargs 參數清單轉換用法與範例">Linux xargs 參數清單轉換用法與範例</a><br><a href="/linux-tail/" title="Linux tail 持續監看檔案輸出用法與範例">Linux tail 持續監看檔案輸出用法與範例</a><br><a href="/linux-du/" title="Linux du 查詢硬碟剩餘空間/資料夾容量用法與範例">Linux du 查詢硬碟剩餘空間/資料夾容量用法與範例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹 Linux nohup 指令用法，&lt;code&gt;nohup&lt;/code&gt; 是一個 Linux 指令，用於執行指令時忽略 Hangup（斷開連線）訊號，使指令在後台執行，即使使用者退出登錄會話或斷開連線，該指令也將繼續執行。有時我們需要執行耗時較長的
      
    
    </summary>
    
    
      <category term="Ubuntu" scheme="https://shengyu7697.github.io/tags/Ubuntu/"/>
    
      <category term="Linux Command" scheme="https://shengyu7697.github.io/tags/Linux-Command/"/>
    
      <category term="Linux" scheme="https://shengyu7697.github.io/tags/Linux/"/>
    
      <category term="Shell Script" scheme="https://shengyu7697.github.io/tags/Shell-Script/"/>
    
  </entry>
  
  <entry>
    <title>PHP 執行發生錯誤在 Chrome/Firefox 上顯示 Error 500，要怎麼讓 PHP 顯示錯誤</title>
    <link href="https://shengyu7697.github.io/php-display-errors/"/>
    <id>https://shengyu7697.github.io/php-display-errors/</id>
    <published>2024-06-29T12:00:00.000Z</published>
    <updated>2024-06-06T23:31:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹怎麼讓 PHP 在瀏覽器上顯示錯誤，PHP 執行發生錯誤在 Chrome/Firefox 上顯示 Error 500，要怎麼辦？要怎麼讓 PHP 顯示錯誤？當你在使用 PHP 網站時遇到 Error 500（內部伺服器錯誤），這通常表示伺服器發生了某種錯誤。要解決這個問題，可以按照以下步驟來進行排查和顯示詳細錯誤訊息：</p><h2><span id="1-啟用-php-錯誤顯示">1. 啟用 PHP 錯誤顯示</span></h2><p>要讓 PHP 顯示錯誤訊息，可以在 PHP 設定檔 (<code>php.ini</code>) 中進行設定，或者在程式碼中直接啟用錯誤顯示。</p><h3><span id="修改-phpini-設定檔">修改 <code>php.ini</code> 設定檔</span></h3><p>找到並修改 <code>php.ini</code> 中以下設定：<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">display_errors</span> = <span class="literal">On</span></span><br><span class="line"><span class="attr">display_startup_errors</span> = <span class="literal">On</span></span><br><span class="line"><span class="attr">error_reporting</span> = E_ALL</span><br></pre></td></tr></table></figure></p><p>修改後，重啟網頁伺服器（如 Apache 或 Nginx）。</p><h3><span id="在-php-程式碼中啟用錯誤顯示">在 PHP 程式碼中啟用錯誤顯示</span></h3><p>在 PHP 檔案的開頭加入以下程式碼：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ini_set(<span class="string">'display_errors'</span>, <span class="number">1</span>);</span><br><span class="line">ini_set(<span class="string">'display_startup_errors'</span>, <span class="number">1</span>);</span><br><span class="line">error_reporting(E_ALL);</span><br></pre></td></tr></table></figure></p><h2><span id="2-檢查伺服器錯誤日誌">2. 檢查伺服器錯誤日誌</span></h2><p>即使啟用了錯誤顯示，有時候錯誤仍然不會顯示在瀏覽器上，特別是如果伺服器設定了禁止顯示錯誤訊息給使用者。在這種情況下，可以檢查伺服器的錯誤日誌以找到詳細錯誤資訊。</p><h3><span id="apache">Apache</span></h3><p>Apache 的錯誤日誌通常位於 <code>/var/log/apache2/error.log</code> 或 <code>/var/log/httpd/error_log</code>。可以使用以下指令查看日誌：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f /var/<span class="built_in">log</span>/apache2/error.log</span><br></pre></td></tr></table></figure></p><h3><span id="nginx">Nginx</span></h3><p>Nginx 的錯誤日誌通常位於 <code>/var/log/nginx/error.log</code>。可以使用以下指令查看日誌：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f /var/<span class="built_in">log</span>/nginx/error.log</span><br></pre></td></tr></table></figure></p><h2><span id="3-確認-htaccess-設定">3. 確認 .htaccess 設定</span></h2><p>如果你使用 Apache 伺服器，可能 <code>.htaccess</code> 檔案中的設定引起了錯誤。確保 <code>.htaccess</code> 檔案中沒有語法錯誤，並且設定正確。</p><h2><span id="4-檢查-php-腳本">4. 檢查 PHP 腳本</span></h2><p>確認你的 PHP 腳本中沒有語法錯誤或邏輯錯誤。可以使用 <code>php -l your_script.php</code> 來檢查 PHP 腳本的語法。</p><h2><span id="5-檢查-php-擴展">5. 檢查 PHP 擴展</span></h2><p>確保所有必要的 PHP 擴展都已正確安裝並啟用。有時候，缺少某些 PHP 擴展也會導致 500 錯誤。</p><p>透過以上步驟，你應該能夠找出並解決 PHP 網站中導致 Error 500 的問題。</p><p>以上就是怎麼讓 PHP 在瀏覽器上顯示錯誤教學介紹，<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p><strong>其它相關文章推薦</strong><br>如果你想學習 PHP 相關技術，可以參考看看下面的文章，<br><a href="/php-mysqli/" title="PHP 和 MySQLi 進行資料庫操作">PHP 和 MySQLi 進行資料庫操作</a><br><a href="/php-pdo/" title="PHP 和 PDO 進行資料庫操作">PHP 和 PDO 進行資料庫操作</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹怎麼讓 PHP 在瀏覽器上顯示錯誤，PHP 執行發生錯誤在 Chrome/Firefox 上顯示 Error 500，要怎麼辦？要怎麼讓 PHP 顯示錯誤？當你在使用 PHP 網站時遇到 Error 500（內部伺服器錯誤），這通常表示伺服器發生了
      
    
    </summary>
    
    
      <category term="PHP" scheme="https://shengyu7697.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>NextCloud 安裝教學、使用方式與常見問題</title>
    <link href="https://shengyu7697.github.io/nextcloud/"/>
    <id>https://shengyu7697.github.io/nextcloud/</id>
    <published>2024-06-28T12:00:00.000Z</published>
    <updated>2024-07-06T14:20:07.881Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹 NextCloud 安裝教學、使用方式與常見問題，NextCloud是一個開源的雲端儲存和檔案同步解決方案，讓使用者可以在自己的伺服器上建立和管理私有雲。它類似於商業服務如 Dropbox 或 Google Drive，但提供了更高的隱私和控制權。目前 NextCloud 已經不支援 SQLite 只有支援 MySQL/MariaDB。NextCloud是一個靈活、安全且功能豐富的私有雲解決方案，特別適合希望保護資料隱私並需要自定義功能的使用者和企業，詳細介紹請見本文。</p><p>以下為本篇內容的目錄，</p><ul><li>Ubuntu NextCloud 安裝步驟</li><li>更換 nextcloud 儲存路徑</li><li>調整 PHP 的記憶體限制</li><li>Nextcloud 影片沒有預覽圖(縮圖)的問題</li><li>為什麼 nextcloud 手機版 app 的功能沒有網頁版完整</li><li>QA. NextCloud 設定檔位置在哪？</li><li>QA. nextcloud log 檔位置在哪？</li><li>遇到 Internal Server Error 問題怎麼看 log</li><li>遇到 Nextcloud 硬碟容量滿的問題</li><li>增加信任的網域及內網的 IP</li><li>QA. 怎麼分享照片給別人，即使別人沒有帳號的情況下</li><li>QA. 手機照片備份後，我手機刪了某張照片後，nextcloud 遠端備份的那張會刪除嗎？</li><li>QA. 反過來的話，手機照片備份後，nextcloud 遠端備份刪了某張照片後，我手機那張會刪除嗎？</li><li>QA. 通常檢視、整理、刪減照片這個動作應該在手機端操作還是 nextcloud 遠端上？</li><li>資料安全建議</li></ul><h2><span id="ubuntu-nextcloud-安裝步驟">Ubuntu NextCloud 安裝步驟</span></h2><p>以下為 Ubuntu 22.04 的 NextCloud 安裝方式，在 Ubuntu 22.04 中 php 版本已更新到 8.1，以下為安裝步驟，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade</span><br><span class="line">sudo apt install apache2 mariadb-server libapache2-mod-php php-gd php-mysql \</span><br><span class="line">php-curl php-mbstring php-intl php-gmp php-bcmath php-xml php-imagick php-zip</span><br></pre></td></tr></table></figure></p><p>使用 MySQL 指令執行以下步驟，建立一個名為 nextcloud 的mysql 資料庫及使用者，<code>your-password</code> 部分的密碼改用你自己的設定。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql</span><br><span class="line">CREATE USER &apos;nextcloud&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;your-password&apos;;</span><br><span class="line">CREATE DATABASE IF NOT EXISTS nextcloud CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;</span><br><span class="line">GRANT ALL PRIVILEGES ON nextcloud.* TO &apos;nextcloud&apos;@&apos;localhost&apos;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line">quit;</span><br></pre></td></tr></table></figure></p><p>到目前為止，已經完成 nextcloud 所有依賴套件的安裝，接下來準備安裝 nextcloud，<br>下載 nextcloud，現在最新版的 nectcloud是 29.0.3，然後解壓縮到 <code>/var/www/html</code> 目錄下，官網說明是解壓縮到 <code>/var/www/</code> 這邊我採用常見的作法，如果沒有安裝unzip程式會無法解壓縮，要先用 <code>sudo apt install unzip</code> 安裝 unzip 程式，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.nextcloud.com/server/releases/nextcloud-29.0.3.zip</span><br><span class="line">sudo unzip nextcloud-29.0.3.zip -d /var/www/html</span><br><span class="line">sudo chown -R www-data:www-data /var/www/html/nextcloud/</span><br></pre></td></tr></table></figure></p><p>以下 apache2 的設定有兩種方式，一種方式是用 IP 或是 <code>https://www.example.com/nextcloud/</code> 這種方式。另一種是用 vhost 虛擬主機的方式，例如你想要你的 Nextcloud 能夠像 <a href="https://cloud.example.com/" rel="noopener" target="_blank">https://cloud.example.com/</a> 這樣的子網域存取的話.。</p><p>這邊先介紹第一種方式，新增 nextcloud.conf 設定檔到 apache2 下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apache2/sites-available/nextcloud.conf</span><br></pre></td></tr></table></figure></p><p>nextcloud.conf 設定檔如下，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Alias /nextcloud &quot;/var/www/html/nextcloud/&quot;</span><br><span class="line"></span><br><span class="line">&lt;Directory /var/www/html/nextcloud/&gt;</span><br><span class="line">  Require all granted</span><br><span class="line">  AllowOverride All</span><br><span class="line">  Options FollowSymLinks MultiViews</span><br><span class="line"></span><br><span class="line">  &lt;IfModule mod_dav.c&gt;</span><br><span class="line">    Dav off</span><br><span class="line">  &lt;/IfModule&gt;</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p><p>這是第二種 vhost 虛擬主機方式，建立 apache2 的虛擬主機設定檔，如果有多個主機名稱，需要個別建立。</p><p>nextcloud.conf 設定檔如下，ServerName 的 <code>your.server.com</code> 要換成你自己的網域名稱，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">  DocumentRoot /var/www/html/nextcloud/</span><br><span class="line">  ServerName  your.server.com</span><br><span class="line"></span><br><span class="line">  &lt;Directory /var/www/html/nextcloud/&gt;</span><br><span class="line">    Require all granted</span><br><span class="line">    AllowOverride All</span><br><span class="line">    Options FollowSymLinks MultiViews</span><br><span class="line"></span><br><span class="line">    &lt;IfModule mod_dav.c&gt;</span><br><span class="line">      Dav off</span><br><span class="line">    &lt;/IfModule&gt;</span><br><span class="line">  &lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></p><p>之後啟用這個網站設定，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2ensite nextcloud</span><br></pre></td></tr></table></figure></p><p>啟用 apache2 的相關模組，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2enmod rewrite headers env dir mime setenvif ssl</span><br></pre></td></tr></table></figure></p><p>重新啟動 apache2，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure></p><p>在瀏覽器上輸入: <code>http://xx.xx.xx.xx/nextcloud/</code>(第一種設定) 或是 <code>http://your.server.com</code> (第二種設定)</p><p>接下來就可以看到 nextcloud 的設定畫面，最上面是準備要新增 nextcloud 的管理員帳號，中間是 server 上資料的存放位置，下面是資料庫的相關設定。<br><img src="/nextcloud/nextcloud-1.png" title="nextcloud">  </p><p>設定資料庫內容，輸入在剛剛前面 mysql 設定的帳號密碼，<br><img src="/nextcloud/nextcloud-2.png" title="nextcloud">  </p><p>按下 Install 等一段時間安裝後，之後就會跳轉頁面，這樣就可以開始使用 nextcloud 了唷！耶！<br><img src="/nextcloud/nextcloud-3.png" title="nextcloud">  </p><p>相關參考<br><a href="https://docs.nextcloud.com/server/latest/admin_manual/installation/example_ubuntu.html" rel="noopener" target="_blank">Example installation on Ubuntu 22.04 LTS</a><br><a href="https://docs.nextcloud.com/server/latest/admin_manual/installation/source_installation.html#apache-configuration-label" rel="noopener" target="_blank">Apache Web server configuration</a><br><a href="https://luyaku.pixnet.net/blog/post/355073992" rel="noopener" target="_blank">Ubuntu Server 22.04 LTS的架設 8. Nextcloud server架設</a></p><p>安裝完基本上已經可以使用，但是想要或提更加的使用體驗的話，最好確認你的環境是否有調整到最佳狀態，可以利用<code>概覽</code>確認建議修正事項，詳細看後續介紹。</p><h2><span id="更換-nextcloud-儲存路徑">更換 nextcloud 儲存路徑</span></h2><p>預設的檔案路徑是放在 /var/www/html/nextcloud/data ，但 /var 這個目錄磁碟空間往往比較小，<br>所以我個人是把檔案放在 /home/nextcloud 這個目錄下。<br>所以要先在 /home 目錄下建立 nextcloud目錄並把owner及權限設好，執行:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /home/nextcloud</span><br><span class="line">sudo chown -R www-data:www-data /home/nextcloud</span><br><span class="line">sudo chmod 755 /home/nextcloud</span><br></pre></td></tr></table></figure></p><h2><span id="設定-crontab-機制">設定 crontab 機制</span></h2><p>在網頁版裡的<code>基本設定</code>&gt;<code>背景工作</code>裡將 AJAX 換成 Cron。</p><p>其他相關參考<br><a href="https://docs.ossii.com.tw/books/nextcloud-G0B/page/nextcloud-Acd" rel="noopener" target="_blank">Nextcloud 基本參數調校作業</a></p><h2><span id="調整-php-的記憶體限制">調整 PHP 的記憶體限制</span></h2><p>在網頁版裡的<code>管理</code>&gt;<code>概覽</code>裡會出現「目前的 PHP 的記憶體限制設定低於建議值 512 MB。」的訊息</p><p>編輯 php 設定檔<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/php/8.1/apache2/php.ini</span><br></pre></td></tr></table></figure></p><p>從原本的 128M 改成 512M，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">memory_limit = 512M</span><br></pre></td></tr></table></figure></p><p>之後在重啟 Apache 服務，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure></p><h2><span id="nextcloud-影片沒有預覽圖縮圖的問題">Nextcloud 影片沒有預覽圖(縮圖)的問題</span></h2><p>Nextcloud 安裝後上傳影片檔案發現影片沒有預覽圖(縮圖)，預設就是這樣，影片要一個一個打開看才知道是哪個影片，這樣實在很不方便，解決方法如下，</p><p>Nextcloud 依賴 ffmpeg 來產生影片預覽縮圖。請確保已安裝並正確設定了 ffmpeg。<br>在 Debian/Ubuntu 系統上，可以使用以下指令安裝 ffmpeg：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ffmpeg</span><br></pre></td></tr></table></figure></p><p>在 Nextcloud 的 config.php 檔案中，確保預覽功能已啟用。<br><code>sudo vim /var/www/html/nextcloud/config/config.php</code><br>新增或確保以下設定存在：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&apos;enable_previews&apos; =&gt; true,</span><br><span class="line">&apos;enabledPreviewProviders&apos; =&gt; [</span><br><span class="line">    &apos;OC\Preview\Movie&apos;,</span><br><span class="line">    &apos;OC\Preview\PNG&apos;,</span><br><span class="line">    &apos;OC\Preview\JPEG&apos;,</span><br><span class="line">    &apos;OC\Preview\GIF&apos;,</span><br><span class="line">],</span><br></pre></td></tr></table></figure></p><p>有時，調整 enabledPreviewProviders 的順序也能解決問題。確保 <code>OC\Preview\Movie</code> 位於清單的頂部。</p><p>存檔後重新整理網頁或APP即可，到這邊為止網頁版與手機版就可以看到影片預覽縮圖了</p><p>查看 Nextcloud 日誌檔案中的錯誤資訊，可能會給出更多關於問題的線索。日誌檔案位於<br><code>/var/www/html/nextcloud/data/nextcloud.log</code></p><p>但網頁版播放影片失敗是另外的問題？</p><h2><span id="為什麼-nextcloud-手機版-app-的功能沒有網頁版完整">為什麼 nextcloud 手機版 app 的功能沒有網頁版完整</span></h2><p>Nextcloud 的手機版 app 一般不如網頁介面功能全面。這是因為手機應用主要專注於檔案同步和基本功能，以保持輕便和易於使用。網頁介面則提供了更廣泛的功能和設定選項，適合進行更深入的管理和設定。</p><p>以下是一些在手機版 app 上可能缺少的功能：</p><ol><li><strong>詳細的管理設定</strong>：如使用者管理、組織管理和應用管理等。</li><li><strong>應用擴展</strong>：一些應用和擴展功能僅能透過網頁介面訪問和設定。</li><li><strong>詳細日誌和報告</strong>：更詳細的日誌和報告功能通常需要在網頁介面中查看。</li><li><strong>高級設定</strong>：如共享設定、高級安全設定等。</li></ol><p>如果你需要使用這些更高級的功能，建議使用網頁介面訪問 Nextcloud。手機版應用更多是用於日常的檔案訪問和簡單的同步操作。</p><h2><span id="qa-nextcloud-設定檔位置在哪">QA. NextCloud 設定檔位置在哪？</span></h2><p>NextCloud 設定檔設定位置在 <code>/var/www/html/nextcloud/config/config.php</code></p><h2><span id="qa-nextcloud-log-檔位置在哪">QA. nextcloud log 檔位置在哪？</span></h2><p>Nextcloud 的 log 檔位置通常在安裝目錄下的 <code>data</code> 資料夾內。預設情況下的路徑是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/var/www/nextcloud/data/nextcloud.log # 官網設定</span><br><span class="line">或</span><br><span class="line">/var/www/html/nextcloud/data/nextcloud.log # 其他常見設定</span><br></pre></td></tr></table></figure><p>網頁版要怎麼查看的話，可以看這篇<br><a href="https://rangotec.com/blog/46.html" rel="noopener" target="_blank">https://rangotec.com/blog/46.html</a></p><h2><span id="遇到-internal-server-error-問題怎麼看-log">遇到 Internal Server Error 問題怎麼看 log</span></h2><p>查看 log<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tail -f /var/log/apache2/error.log</span><br><span class="line">or</span><br><span class="line">tail -f /usr/local/apache2/logs/error.log</span><br></pre></td></tr></table></figure></p><h2><span id="遇到-nextcloud-硬碟容量滿的問題">遇到 Nextcloud 硬碟容量滿的問題</span></h2><p>首先先確認是不是真的硬碟容量滿了，使用 df -h 指令查看，我就遇過我的 VM 開 40GB 空間，但VM開啟安裝好後檢查空間上限結果是變成19 GB<br><a href="https://www.coder17.com/posts/nextcloud-storage-full/" rel="noopener" target="_blank">Nextcloud 誤報儲存已滿</a><br><a href="https://blog.csdn.net/gyro1/article/details/101280541" rel="noopener" target="_blank">NextCloud 在Nginx下報告報告空間不足</a><br>它使用NGINX，NextCloud 是透過 /index.php/apps/files/ajax/getstoragestats.php 來取得可用空間的，但是如果設定不正確的nginx的pathinfo，就會壞掉，看起新版沒有這個檔案了。</p><h2><span id="增加信任的網域及內網的-ip">增加信任的網域及內網的 IP</span></h2><p>新增加信任的網域及內網的 IP，如果未來有設要跟 NextCloud 結合會建在這裡增網域及 IP<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&apos;trusted_domains&apos; =&gt; </span><br><span class="line">array (</span><br><span class="line">  0 =&gt; &apos;[sub.domain].com&apos;,</span><br><span class="line">  1 =&gt; &apos;192.168.1.10&apos;,</span><br><span class="line">),</span><br></pre></td></tr></table></figure></p><h2><span id="qa-怎麼分享照片給別人即使別人沒有帳號的情況下">QA. 怎麼分享照片給別人，即使別人沒有帳號的情況下</span></h2><p>選照片後，可以按分享連結後就可以產生一個短連結分享給其他人，這就很像google 雲端硬碟分享照片設定權限給任何知道連結的人都能觀看的那個功能。</p><h2><span id="qa-手機照片備份後我手機刪了某張照片後nextcloud-遠端備份的那張會刪除嗎">QA. 手機照片備份後，我手機刪了某張照片後，nextcloud 遠端備份的那張會刪除嗎？</span></h2><p>手機照片備份到 Nextcloud 後，如果你在手機上刪除了某張照片，Nextcloud 遠端備份的那張照片通常不會自動刪除。Nextcloud 主要是用於備份和同步檔案，但它不會預設同步刪除操作，除非你啟用了特定的同步選項。</p><h2><span id="qa-反過來的話手機照片備份後nextcloud-遠端備份刪了某張照片後我手機那張會刪除嗎">QA. 反過來的話，手機照片備份後，nextcloud 遠端備份刪了某張照片後，我手機那張會刪除嗎？</span></h2><p>如果你在 Nextcloud 遠端備份中刪除了某張照片，通常情況下，你手機上的那張照片不會被刪除。這是因為大多數情況下，Nextcloud 的自動上傳功能是單向的（從手機上傳到伺服器），而不是雙向同步。</p><h2><span id="qa-通常檢視-整理-刪減照片這個動作應該在手機端操作還是-nextcloud-遠端上">QA. 通常檢視、整理、刪減照片這個動作應該在手機端操作還是 nextcloud 遠端上？</span></h2><p>通常情況下，建議在手機端進行檢視、整理和刪除照片，因為手機端的操作更加直觀和方便，並且可以確保你只刪除真正不需要的照片。下面是一些詳細的理由和建議：</p><h3><span id="在手機端操作的優勢">在手機端操作的優勢</span></h3><ol><li><strong>直觀方便</strong>：手機端可以直接預覽照片，放大細節，更容易判斷照片的質量和是否需要保留。</li><li><strong>立即效果</strong>：在手機端刪除或整理照片可以立即看到效果，不需要等待同步。</li><li><strong>避免誤刪</strong>：在手機端操作，可以更好地控制刪除的內容，減少誤刪重要照片的風險。</li></ol><h3><span id="nextcloud-遠端操作的優勢">Nextcloud 遠端操作的優勢</span></h3><ol><li><strong>節省手機儲存</strong>：如果你的手機儲存空間有限，可以將不常用的照片備份到 Nextcloud 後再從手機上刪除。</li><li><strong>集中管理</strong>：Nextcloud 端可以更方便地集中管理和備份大量照片，特別是如果你有多台裝置需要統一管理照片。</li></ol><h3><span id="推薦的操作流程">推薦的操作流程</span></h3><ol><li><p><strong>在手機端進行初步整理</strong>：</p><ul><li>定期在手機端查看和刪除不需要的照片（例如模糊、不合格或重覆的照片）。</li><li>保留重要的和需要備份的照片。</li></ul></li><li><p><strong>將整理後的照片備份到 Nextcloud</strong>：</p><ul><li>使用 Nextcloud 自動上傳功能，備份整理後的照片到伺服器。</li></ul></li><li><p><strong>在 Nextcloud 端進行二次整理（可選）</strong>：</p><ul><li>如果需要進一步分類或刪除不需要的備份照片，可以在 Nextcloud 端進行。</li><li>注意確保不會影響手機端的照片。</li></ul></li></ol><h2><span id="資料安全建議">資料安全建議</span></h2><ol><li><strong>多重備份</strong>：除了 Nextcloud，可以考慮將重要照片備份到其他雲服務或外部儲存裝置，增加資料的安全性。</li><li><strong>定期檢查</strong>：定期檢查手機和 Nextcloud 上的照片，確保所有重要照片都已經備份，並且沒有誤刪。</li></ol><h2><span id="其他網友遇到的問題">其他網友遇到的問題</span></h2><p><a href="https://rangotec.com/blog/29.html" rel="noopener" target="_blank">Nextcloud 局域网上传速度慢</a><br>不確定新版本還有沒有這個問題，待確認</p><p>其他相關參考<br><a href="https://www.asustor.com/zh-tw/online/College_topic?topic=273" rel="noopener" target="_blank">使用 Nextcloud 在 ASUSTOR NAS 上進行協同作業</a><br>在 ASUSTOR NAS 上安裝 Nextcloud 並將其與 OnlyOffice 結合使用以進行協同作業</p><p>以上就是 NextCloud 安裝教學與使用方式介紹，<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹 NextCloud 安裝教學、使用方式與常見問題，NextCloud是一個開源的雲端儲存和檔案同步解決方案，讓使用者可以在自己的伺服器上建立和管理私有雲。它類似於商業服務如 Dropbox 或 Google Drive，但提供了更高的隱私和控制權
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>信義101健康管理診所 體驗心得</title>
    <link href="https://shengyu7697.github.io/xinyi101/"/>
    <id>https://shengyu7697.github.io/xinyi101/</id>
    <published>2024-06-27T12:00:00.000Z</published>
    <updated>2024-06-30T04:00:06.940Z</updated>
    
    <content type="html"><![CDATA[<p>近期 ShengYu 進行年度健康檢查，今年比較特別就想選新的健檢中心嘗試看看，就選了信義101健康管理診所這家健檢中心，就來順手紀錄一下體驗心得。</p><p>第一次來信義101健康管理診所進行年度檢查，先用機台報到後會有號碼，然後準備等櫃檯叫號，然後會請你安裝他們的APP，稍後會用到。<br><img src="/xinyi101/PXL_20240626_002521002.jpg" width="640" title="信義101">  </p><p>捷運紅線101下車2號出口走出來後就可以看到這棟建築物了，信義101健康管理診所位於這棟大樓的4樓，這棟看起來都是新光集團的。<br><img src="/xinyi101/PXL_20240626_040539440.jpg" width="640" title="信義101">  </p><p>第一次做電梯是要在外面先按樓層，然後它在告訴你去哪個電梯搭，沒見過世面的鄉下孩子XD。<br><img src="/xinyi101/PXL_20240626_002533853.jpg" width="640" title="信義101">  </p><p>這一袋是等等要換的衣服褲子跟拖鞋，是送的可以帶回家，蛤？！我當下嚇到，可以帶回家喔，但是發現有Logo不會穿出門，大概在家穿吧。事後才知道原來是公司合作的方案中會送，一般要回收的是紫色的。男生只能穿自己的內褲，還有帶著手機，因為要看APP看診號跑站點。<br><img src="/xinyi101/PXL_20240626_003836357.jpg" width="640" title="信義101"> <img src="/xinyi101/PXL_20240626_003845987.jpg" width="640" title="信義101">  </p><p>動線算是一個放射線的路線，每個門診前都有座位區可以等候，還有螢幕可以看候位狀況，不時地也會有人來告訴你怎麼去哪一號門診，每門診結束後都會告訴你下一站去哪一號，整個健檢中心都在同一層樓，這部分表現不錯。<br><img src="/xinyi101/PXL_20240626_005209008.jpg" width="640" title="信義101"><br><img src="/xinyi101/PXL_20240626_033301146.jpg" width="640" title="信義101">  </p><p>花了兩個多小時終於跑完所有站點做完檢查，肚子超餓的，來去用餐了，用餐環境不錯，領取號碼牌就直接去想做的位子等就可以了。<br><img src="/xinyi101/PXL_20240626_025845302.jpg" width="640" title="信義101">  </p><p>餐點會稍候送到位子上，餐點我是選雞肉沙拉，吃起來還不錯，飲料可續杯，第二杯我換黑咖啡提提神，跟別間健檢中心相比，我還是比較喜歡吃有飯的餐盒，我是飯食主義者，沙拉吃不飽，雖然裡面也有一些地瓜跟幾條螺旋麵。<br><img src="/xinyi101/PXL_20240626_030013805.jpg" width="640" title="信義101">  </p><h2><span id="結論">結論</span></h2><p>整體來說，感受是不錯的，唯獨少數一些站點人員可能有一些職業倦怠，過程中講的一連串東西沒想過有沒有聽進去，就是把它講完交差了事，遇到大約2-3個這樣的狀況，排除這個問題以外，整體的感覺是不錯的。</p><p>檢查報告的部分，PDF電子檔報告要15個工作天寄送電子信箱，實體紙本報告要20個工作天。如果可以當天就知道檢驗結果的話會更好，我之前去的健檢中心都可以做到當天就能看報告還有醫生跟你一起看，然後之後報告再寄送。</p><p>最後誠心建議，很久沒健康檢查的各位，要定期去做檢康檢查唷！不要工作忙碌就忘記去檢查唷！身體跟汽車一樣也是要進場保養維修，這樣才能開更久遠。</p><p>附上本次的健檢中心資訊，<br>官網連結：<a href="https://www.xinyi101.com.tw/" rel="noopener" target="_blank">信義101健康管理診所</a><br>地址：台北市信義區信義路五段8號4樓</p><iframe src="https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d14460.152865894115!2d121.5609844!3d25.0327771!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3442ab44d70acd2f%3A0x5be6b87e4e1486c3!2z5L-h576pMTAx5YGl5bq3566h55CG6Ki65omA!5e0!3m2!1szh-TW!2stw!4v1719714401505!5m2!1szh-TW!2stw" width="100%" height="400" style="border:0;" allowfullscreen loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe><p>如果你覺得我的分享寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;近期 ShengYu 進行年度健康檢查，今年比較特別就想選新的健檢中心嘗試看看，就選了信義101健康管理診所這家健檢中心，就來順手紀錄一下體驗心得。&lt;/p&gt;
&lt;p&gt;第一次來信義101健康管理診所進行年度檢查，先用機台報到後會有號碼，然後準備等櫃檯叫號，然後會請你安裝他們的A
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>3 種 Python 字串搜尋並且忽略大小寫方法</title>
    <link href="https://shengyu7697.github.io/python-search-strings-ignore-case/"/>
    <id>https://shengyu7697.github.io/python-search-strings-ignore-case/</id>
    <published>2024-06-26T12:00:00.000Z</published>
    <updated>2024-06-27T13:00:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹 3 種 Python 字串搜尋並且忽略大小寫方法，在 Python 程式設計中，字串搜尋是一個常見且重要的操作。無論是檢查使用者輸入，還是從大量資料中篩選特定資訊，能夠有效地搜尋字串都是至關重要的。而在進行字串搜尋時，我們經常需要忽略大小寫。本文將介紹幾種在 Python 中搜尋字串並忽略大小寫的方法。</p><h2><span id="方法一使用-in-來進行大小寫無關的搜尋">方法一：使用 <code>in</code> 來進行大小寫無關的搜尋</span></h2><p><code>in</code> 關鍵字是 Python 中最簡單的字串搜尋方法之一。要忽略大小寫，可以將字串和關鍵字都轉換為小寫或大寫後再進行比較。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">keyword = <span class="string">"python"</span></span><br><span class="line">text = <span class="string">"I love programming in Python."</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> keyword.lower() <span class="keyword">in</span> text.lower():</span><br><span class="line">    print(<span class="string">"Keyword found!"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"Keyword not found."</span>)</span><br></pre></td></tr></table></figure><p>這種方法直觀且易於實現，非常適合用於簡單的字串匹配需求。</p><h2><span id="方法二使用-casefold-進行更強大的大小寫無關搜尋">方法二：使用 <code>casefold()</code> 進行更強大的大小寫無關搜尋</span></h2><p><code>casefold()</code> 方法比 <code>lower()</code> 更強大，因為它不僅可以處理 ASCII 字元，還能處理其他語言中的字元。這使得它在國際化應用中尤為有效。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">keyword = <span class="string">"python"</span></span><br><span class="line">text = <span class="string">"I love programming in Python."</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> keyword.casefold() <span class="keyword">in</span> text.casefold():</span><br><span class="line">    print(<span class="string">"Keyword found!"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"Keyword not found."</span>)</span><br></pre></td></tr></table></figure><h2><span id="方法三使用正則表達式進行大小寫無關的搜尋">方法三：使用正則表達式進行大小寫無關的搜尋</span></h2><p>正則表達式（Regular Expressions, 簡稱 regex）是一種功能強大的字串處理工具。在 Python 中，我們可以使用 <code>re</code> 模組並指定 <code>re.IGNORECASE</code> 標誌來進行不區分大小寫的匹配。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">keyword = <span class="string">"python"</span></span><br><span class="line">text = <span class="string">"I love programming in Python."</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> re.search(keyword, text, re.IGNORECASE):</span><br><span class="line">    print(<span class="string">"Keyword found!"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"Keyword not found."</span>)</span><br></pre></td></tr></table></figure><p>這種方法適用於更複雜的匹配需求，例如模式匹配或多次出現的關鍵字。</p><h2><span id="小結">小結</span></h2><p>在 Python 中搜尋字串並忽略大小寫有多種方法可以選擇。使用 <code>in</code> 關鍵字、<code>casefold()</code> 方法以及正則表達式都能達到這個目的。根據具體需求選擇合適的方法，可以讓你的程式更加高效和準確。希望這些方法能幫助你在 Python 字串處理上更加得心應手。</p><p>以上就是 3 種在 Python 中進行字串搜尋且忽略大小寫的常用方法介紹，<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p><strong>其它相關文章推薦</strong><br><a href="/python-tutorial/" title="Python 新手入門教學懶人包">Python 新手入門教學懶人包</a><br><a href="/python-search-keywords-in-string/" title="4 種 Python 字串中搜尋關鍵字的方法">4 種 Python 字串中搜尋關鍵字的方法</a><br><a href="/python-str-find/" title="Python str.find() 用法與範例">Python str.find() 用法與範例</a><br><a href="/python-str/" title="Python str 字串用法與範例">Python str 字串用法與範例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹 3 種 Python 字串搜尋並且忽略大小寫方法，在 Python 程式設計中，字串搜尋是一個常見且重要的操作。無論是檢查使用者輸入，還是從大量資料中篩選特定資訊，能夠有效地搜尋字串都是至關重要的。而在進行字串搜尋時，我們經常需要忽略大小寫。本文
      
    
    </summary>
    
      <category term="Python教學" scheme="https://shengyu7697.github.io/categories/Python%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="Python" scheme="https://shengyu7697.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>4 種 Python 字串中搜尋關鍵字的方法</title>
    <link href="https://shengyu7697.github.io/python-search-keywords-in-string/"/>
    <id>https://shengyu7697.github.io/python-search-keywords-in-string/</id>
    <published>2024-06-24T12:00:00.000Z</published>
    <updated>2024-06-30T02:30:07.713Z</updated>
    
    <content type="html"><![CDATA[<p>本篇 ShengYu 介紹 4 種 Python 字串中搜尋關鍵字的方法，在 Python 中，搜尋字串中的關鍵字是一項常見且基本的操作。無論是處理文字資料、過濾日誌檔案，還是開發網頁爬蟲，了解如何在字串中搜尋關鍵字都十分重要。本文將介紹四種在 Python 中搜尋關鍵字的方法，幫助你更有效地處理文字資料。</p><h2><span id="1-使用-in-運算子">1. 使用 <code>in</code> 運算子</span></h2><p><code>in</code> 運算子是 Python 中最簡單且直觀的方法之一。它用於檢查子串是否存在於另一個字串中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"Python is a powerful programming language."</span></span><br><span class="line">keyword = <span class="string">"powerful"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> keyword <span class="keyword">in</span> text:</span><br><span class="line">    print(<span class="string">"Keyword found!"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"Keyword not found."</span>)</span><br></pre></td></tr></table></figure><p>這種方法簡潔明瞭，非常適合用於簡單的存在性檢查。</p><h2><span id="2-使用-strfind-方法">2. 使用 <code>str.find()</code> 方法</span></h2><p><code>str.find()</code> 方法回傳子串在字串中的最低索引值，如果未找到子串，則回傳 -1。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"Python is a powerful programming language."</span></span><br><span class="line">keyword = <span class="string">"powerful"</span></span><br><span class="line"></span><br><span class="line">position = text.find(keyword)</span><br><span class="line"><span class="keyword">if</span> position != <span class="number">-1</span>:</span><br><span class="line">    print(<span class="string">f"Keyword found at position <span class="subst">&#123;position&#125;</span>."</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"Keyword not found."</span>)</span><br></pre></td></tr></table></figure><p>這種方法比 <code>in</code> 運算子提供更多的資訊，如子串的具體位置。</p><h2><span id="3-使用-re-模組進行正則表達式搜尋">3. 使用 <code>re</code> 模組進行正則表達式搜尋</span></h2><p><code>re</code> 模組允許使用正則表達式進行更複雜的模式對應。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">text = <span class="string">"Python is a powerful programming language."</span></span><br><span class="line">keyword = <span class="string">"powerful"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> re.search(keyword, text):</span><br><span class="line">    print(<span class="string">"Keyword found!"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"Keyword not found."</span>)</span><br></pre></td></tr></table></figure><p>正則表達式適合需要進行複雜模式對應的情況，例如在文字中搜尋多個變化形式的關鍵字。</p><h2><span id="4-使用-strindex-方法">4. 使用 <code>str.index()</code> 方法</span></h2><p><code>str.index()</code> 方法類似於 <code>str.find()</code>，但當子串未找到時會引發 <code>ValueError</code> 異常。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"Python is a powerful programming language."</span></span><br><span class="line">keyword = <span class="string">"powerful"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    position = text.index(keyword)</span><br><span class="line">    print(<span class="string">f"Keyword found at position <span class="subst">&#123;position&#125;</span>."</span>)</span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line">    print(<span class="string">"Keyword not found."</span>)</span><br></pre></td></tr></table></figure><p>這種方法適合需要處理異常情況的應用場景。</p><h2><span id="結語">結語</span></h2><p>了解和掌握不同的搜尋方法能夠幫助你在處理文字資料時更靈活應對各種需求。每種方法都有其獨特的優勢和適用場景，選擇合適的方法可以使你的程式碼更加高效和可讀性更高。</p><p>以上就是 4 種 Python 字串中搜尋關鍵字的方法的介紹，<br>如果你覺得我的文章寫得不錯、對你有幫助的話記得 <a href="https://www.facebook.com/shengyu7697/" rel="noopener" target="_blank">Facebook 按讚</a>支持一下！  </p><p><strong>其它相關文章推薦</strong><br><a href="/python-tutorial/" title="Python 新手入門教學懶人包">Python 新手入門教學懶人包</a><br><a href="/python-search-strings-ignore-case/" title="3 種 Python 字串搜尋並且忽略大小寫方法">3 種 Python 字串搜尋並且忽略大小寫方法</a><br><a href="/python-str-find/" title="Python str.find() 用法與範例">Python str.find() 用法與範例</a><br><a href="/python-str/" title="Python str 字串用法與範例">Python str 字串用法與範例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇 ShengYu 介紹 4 種 Python 字串中搜尋關鍵字的方法，在 Python 中，搜尋字串中的關鍵字是一項常見且基本的操作。無論是處理文字資料、過濾日誌檔案，還是開發網頁爬蟲，了解如何在字串中搜尋關鍵字都十分重要。本文將介紹四種在 Python 中搜尋關鍵字的
      
    
    </summary>
    
      <category term="Python教學" scheme="https://shengyu7697.github.io/categories/Python%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="Python" scheme="https://shengyu7697.github.io/tags/Python/"/>
    
  </entry>
  
</feed>
